<style lang="less">
page{
  background-color: #ededed;
}

.container{
  >.header{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    margin: 10px 7%;
    width: 86%;

    >text{
      color: #8a8a8a;
      font-size: 12px;
    }
    >input{
      width: 100%;
      padding: 10px 0;
      border-bottom: 1px solid light#8A8A8A;
      font-size: 18px;
      font-weight: bold;
      color: black;
    }
    >textarea{
      width: 100%;
      padding: 10px 0;
      min-height: 100px;
      font-size: 15px;
      color: #8A8A8A;
    }
    >text{

    }
  }
  .inputs{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    margin: 10px 7%;
    padding-top: 10px;
    width: 86%;

    >text{
      color: #8a8a8a;
      font-size: 12px;
    }

    >.input-container{
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      padding: 20px 0;
      width: 100%;

      >text{
        flex: 0 1 auto;
        color: black;
        font-size: 15px;
        padding-right: 20px;
      }
      >input, >picker{
        flex: 1 0 auto;
        color: black;
        font-weight: bold;
        font-size: 15px;
        text-align: right;
      }
      >icon{
        font-size: 28px;
      }
    }
  }
  >.button{
    margin: 20px 7%;
    width: 86%;
    text-align: center;
    line-height: 30px;
    padding: 10px 0;
    font-size: 15px;
    font-weight: bold;
    color: black;
    background-color: white;
    border-radius: 10px;
    border: none;
  }
}
</style>
<template>
  <view class="container">
    <view class="header">
      <text>标题</text>
      <input placeholder="签到名称" maxlength="20" data-key="title" value="{{ title }}" bindchange="inputChange" />
    </view>

    <view class="inputs">
      <text>签到设置</text>
      <view class="input-container">
        <text>持续时间</text>
        <picker mode="selector" data-key="durationIndex" bindchange="inputChange" value="{{ durationIndex }}" range="{{ durationArray }}">
          <view class="picker">
            {{ durationArray[durationIndex] }}
          </view>
        </picker>
      </view>
      <view class="input-container">
        <text>签到距离</text>
        <picker mode="selector" data-key="distanceIndex" bindchange="inputChange" value="{{ distanceIndex }}" range="{{ distanceArray }}">
          <view class="picker">
            {{ distanceArray[distanceIndex] }}
          </view>
        </picker>
      </view>
      <view class="input-container">
        <text>开启签到码</text>
        <icon bindtap="toggleCheckCode" class="iconfont {{checkCode?'icon-anniu_xuanzhong':'icon-danxuanweixuanzhong'}}"></icon>
      </view>
    </view>
    <button class="button" disabled="{{ loading }}" loading="{{ loading }}" bindtap="createCheckForm">确定创建</button>

  </view>
</template>

<script>
  import wepy from 'wepy'
  import util from '@/utils/util.js'
  import request from '@/utils/request.js'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '创建签到',
    }

    data = {
      userId: '',
      groupId: '',
      loading: false,
      durationArray: ['三分钟', '五分钟', '十分钟', '一小时'],
      durationIndex: 1,
      distanceArray: ['50米', '100米', '200米', '不限'],
      distanceIndex: 0,
      title: util.moment().format('YYYY年M月D日'),
      checkCode: false,
      groupInfo: {
        name: '',
        description: '',
      },
    }

    computed = {
    }

    methods = {
      toggleCheckCode(){
        this.checkCode = !this.checkCode
      },
      inputChange(e){
        let self = this
        const keyArr = e.currentTarget.dataset.key.split('.')

        if(keyArr.length == 1){
          this[keyArr[0]] = e.detail.value
        }
        else if(keyArr.length == 2){
          this[keyArr[0]][keyArr[1]] = e.detail.value
        }
        else if(keyArr.length == 3){
          this[keyArr[0]][keyArr[1]][keyArr[2]] = e.detail.value
        }
      },
      createCheckForm(e){
        let self = this

        self.loading = true

        // 获取经纬度坐标
        wx.getLocation({
          type: 'wgs84',
          success (position) {
            
            let now = new Date()
            let minutes = self.durationIndex == 0?3:
                self.durationIndex == 1?5:
                self.durationIndex == 2?10:
                self.durationIndex == 3?60:0
            
            let data = {
              title: self.title,
              position: position.latitude + '-' + position.longitude,
              distance: self.distanceIndex == 0?50:
                        self.distanceIndex == 1?100:
                        self.distanceIndex == 2?200:-1,
              groupId: self.groupId,
              userId: self.userId,
              createAt: now,
              endAt: new Date( now.getTime() + minutes*60*1000 )
            }
            
            if(self.checkCode){
              data.code = Math.ceil(Math.random()*100000)
            }

            request.post('/createCheckForm', data)
            .then(res=>{
              wx.showToast({
                title: '开启签到成功！',
                icon: 'success',
                duration: 1000
              })
              setTimeout(() => {
                wx.redirectTo({
                  url: 'checkFormInfo?group_id=' + self.groupId + '&checkForm_id=' + res.data._id
                })
              }, 1000);
            })
          },

          fail (res){
            wx.showToast({
              title: '创建失败，请前往「权限设置」开启获取定位权限。',
              icon: 'none',
              duration: 2000
            })
          }
        })
      }
    }

    onLoad(option) {
      let self = this, userId = wx.getStorageSync('userId'), groupId = option.group_id

      self.userId = userId
      self.groupId = groupId

      request.post('/getCheckFormsByGroupId', {groupId, userId})
      .then(res=>{
        self.title += ` 第${res.data.length + 1}次签到`
        self.$apply()
      })
    }
  }
</script>
