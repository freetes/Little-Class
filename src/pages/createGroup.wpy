<style lang="less">
page{
  background-color: #fafafa;
}

.container{
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  width: 100%;

  >.header{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    margin: 10px 7%;
    width: 86%;

    >text{
      color: #8a8a8a;
      font-size: 12px;
    }
    >input{
      width: 100%;
      padding: 10px 0;
      border-bottom: 1px solid light#8A8A8A;
      font-size: 18px;
      font-weight: bold;
      color: black;
    }
    >textarea{
      width: 100%;
      padding: 10px 0;
      min-height: 100px;
      font-size: 16px;
      color: black;
    }
    >text{

    }
  }
  >.inputs{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    margin: 10px 7%;
    padding-top: 10px;
    width: 86%;

    >text{
      color: #8a8a8a;
      font-size: 12px;
    }

    >.input-container{
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      padding: 20px 0;
      width: 100%;
      border-bottom: 1px solid #fafafa;

      color: black;
      font-size: 16px;
      >text{
        flex: 0 1 auto;
        padding-right: 20px;
      }
      >input, >picker{
        flex: 1 0 auto;
        font-weight: bold;
        text-align: right;
      }
    }
  }
  >.button{
    margin: 20px 7%;
    width: 86%;
    text-align: center;
    line-height: 30px;
    padding: 10px 0;
    font-size: 16px;
    font-weight: bold;
    border-radius: 10px;
    color: black;
    background-color: white;
  }
}
</style>
<template>
  <view class="container">
    <view class="header">
      <text>基本信息</text>
      <input placeholder="名称" maxlength="20" data-key="groupInfo.name" value="{{ groupInfo.name }}" bindchange="inputChange" />
      <textarea data-key="groupInfo.description" value="{{ groupInfo.description }}" bindinput="inputChange" auto-height placeholder="描述" />
    </view>

    <text class="button" bindtap="createGroup">确定创建</text>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import request from '@/utils/request.js'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '创建群组',
      navigationBarBackgroundColor: '#fafafa'
    }

    data = {
      sexArray: ['保密', '男', '女'],
      kindArray: ['学生', '教师'],
      groupInfo: {
        name: '',
        description: '',
      },
      openid: '',
      userId: ''
    }

    computed = {
      now () {
        return new Date()
      }
    }

    methods = {
      inputChange(e){
        let self = this
        const keyArr = e.currentTarget.dataset.key.split('.')

        if(keyArr.length == 2){
          this[keyArr[0]][keyArr[1]] = e.detail.value
        }
        else if(keyArr.length == 3){
          this[keyArr[0]][keyArr[1]][keyArr[2]] = e.detail.value
        }
      },
      createGroup(){
        let self = this

        if(self.groupInfo.name == ''){
          return wx.showToast({
            title: '名称不能为空！',
            icon: 'none',
            duration: 1000
          })
        }

        let data = {
          userId: self.userId,
          groupName: self.groupInfo.name,
          description: self.groupInfo.description
        }

        request.post('/createGroup', data)
        .then(res=>{
          wx.showToast({
            title: '创建成功！',
            icon: 'success',
            duration: 1000
          })
          setTimeout(() => {
            wx.redirectTo({
              url: 'groupInfo?group_id=' + res.data._id
            })
          }, 1000);
        })
      }
    }

    onShow() {
      let self = this, userId = wx.getStorageSync('userId')

      if(userId){
        self.userId = userId
      }
    }
  }
</script>
