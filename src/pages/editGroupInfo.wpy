<style lang="less">
page{
  background-color: white;
}

.container{
  >.header{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    margin: 10px 7%;
    width: 86%;

    >text{
      color: #8a8a8a;
      font-size: 12px;
    }
    >input{
      width: 100%;
      padding: 10px 0;
      border-bottom: 1px solid lightgray;
      font-size: 18px;
      font-weight: bold;
      color: black;
    }
    >textarea{
      width: 100%;
      padding: 10px 0;
      min-height: 100px;
      font-size: 16px;
      color: gray;
    }
    >text{

    }
  }
  >.inputs{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    margin: 10px 7%;
    padding-top: 10px;
    width: 86%;

    >text{
      color: gray;
      font-size: 14px;
    }

    >.input-container{
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      padding: 20px 0;
      width: 100%;
      border-bottom: 1px solid #fafafa;

      >text{
        flex: 0 1 auto;
        color: black;
        font-size: 16px;
        padding-right: 20px;
      }
      >input, >picker{
        flex: 1 0 auto;
        color: black;
        font-size: 16px;
        font-weight: bold;
        text-align: right;
      }
    }
  }
  >button{
    padding: 10px 7%;
    width: 86%;
    margin-top: 20px;
    margin-bottom: 20px;
    background-color: white;
    border-top: 1px solid #fafafa;
    border-bottom: 1px solid #fafafa;
  }
  >button::after{
    border: none;
  }
}
</style>
<template>
  <view class="container">
    <view class="header">
      <text>基本信息</text>
      <input placeholder="群名称" data-key="groupInfo.name" value="{{ groupInfo.name }}" bindchange="inputChange" />
      <textarea data-key="groupInfo.description" value="{{ groupInfo.description }}" bindblur="inputChange" auto-height placeholder="描述" />
    </view>

    <view class="inputs">
      <text>其它设置</text>
      <view class="input-container">
        <text>加群方式</text>
        <picker mode="selector" data-key="groupInfo.status" bindchange="inputChange" value="{{ groupInfo.status }}" range="{{ joinGroupArray }}">
          <view class="picker">
            {{ joinGroupArray[groupInfo.status] }}
          </view>
        </picker>
      </view>
      <input placeholder="群名称" data-key="groupInfo.name" value="{{ groupInfo.name }}" bindchange="inputChange" />
      <textarea data-key="groupInfo.description" value="{{ groupInfo.description }}" bindblur="inputChange" auto-height placeholder="描述" />
    </view>
    
    <!-- 成员 信息 -->
    <view class="members">
      <view class="title">
        <text>成员</text>
        <text class="assist">{{ groupInfo.members.length==0?'空空无人':'共' + groupInfo.members.length + '人'}}</text>
      </view>
      <view wx:if="{{ groupInfo.members.length!=0 }}" wx:key="user_id">
        <image mode="widthFix" wx:for="{{ groupInfo.members }}" src="{{ item.user_info.avatarUrl }}"></image>
      </view>
    </view>

    <button bindtap="">解散</button>

  </view>
</template>

<script>
  import wepy from 'wepy'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '群组信息'
    }

    data = {
      groupInfo: {},
      wxInfo: {
        nickName: '登入',
        avatarUrl: '../static/imgs/用户.png'
      },
      joinGroupArray: ['任何人都可以加入', '不允许加入'],
      _id: ''
    }

    computed = {
    }

    methods = {
      inputChange(e){
        let self = this
        const keyArr = e.currentTarget.dataset.key.split('.')

        if(keyArr.length == 2){
          this[keyArr[0]][keyArr[1]] = e.detail.value
        }
        else if(keyArr.length == 3){
          this[keyArr[0]][keyArr[1]][keyArr[2]] = e.detail.value
        }
      },
      updateUserInfo(){
        let self = this
        
        const db = wx.cloud.database()
        
        db.collection('users').doc(self._id)
        .update({
          data: self.userInfo,
          success: function(res) {
            console.log(res)
            // 更新成功
            if(res.stats.updated == 1){

            }
          }
        })
      }
    }

    onLoad(option) {
      let self = this

      self._id = option._id

      wx.cloud.callFunction({
        name: 'getGroupById',
        data: {group_id: option._id}
      }).then(res=>{
        self.groupInfo = res.result.data
        self.$apply()
      })
    }
  }
</script>
