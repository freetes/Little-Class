<style lang="less">
page{
  background-color: #ededed;
}

.container{
  >.header{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    margin: 10px 7%;
    width: 86%;

    >.avatar{
      width: 60px;
      height: 60px;
      border-radius: 50%;
      background-color: lightgray;
      margin: 10px 0;
      align-self: center;
    }

    >text{
      color: #8A8A8A;
      font-size: 14px;
      padding-top: 10px;
    }

    >.input-container{
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      padding: 10px 0;
      width: 100%;

      >text{
        flex: 0 1 auto;
        color: black;
        font-size: 15px;
        padding-right: 20px;
      }
      >input, >picker, >textarea{
        flex: 1 0 auto;
        color: black;
        font-size: 15px;
        font-weight: bold;
        text-align: right;
      }
    }

    >textarea{
      width: 100%;
      padding: 10px 0;
      min-height: 100px;
      font-size: 15px;
      color: black;
    }
  }
  >.inputs{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    margin: 10px 7%;
    padding-top: 10px;
    width: 86%;

    >text{
      color: #8A8A8A;
      font-size: 14px;
    }

    >.input-container{
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      padding: 10px 0;
      width: 100%;

      >text{
        flex: 0 1 auto;
        color: black;
        font-size: 15px;
        padding-right: 20px;
      }
      >input, >picker, >textarea{
        flex: 1 0 auto;
        color: black;
        font-size: 15px;
        font-weight: bold;
        text-align: right;
      }
    }
  }
  >.btns{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 90%;
    margin: 5px 5%;
    background-color: white;
    border-radius: 10px;

    >button{
      line-height: 30px;
      padding: 5px 10px;
      background-color: white;
      color: brown;
      font-size: 15px;
      font-weight: bold;
      text-align: center;
    }
  }

  .modal-container{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: rgba(0, 0, 0, 0.7);
    z-index: 100;

    >.modal-main{
      background-color: #fff;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      padding: 0 10px;
      width: 60%;
      padding-bottom: 0;

      >.modal-title{
        border-bottom: 1px solid light#8A8A8A;
        margin: 10px 0;
        font-size: 12px;
        color: #8A8A8A;
      }
      
      >button{
        padding: 5px 10px;
        margin: 20px 0;
        align-self: center;
        border: 1px solid #8a8a8a;
        background-color: white;
        font-size: 14px;
        color: black;
        font-weight: bold;
      }
      >button::after{
        border: none;
      }
    }
  }
  >.message{
    align-self: center;
    font-size: 14px;
    color: green;
    line-height: 20px;
  }
}
</style>
<template>
  <view class="container">
    <view class="header">
      <image class="avatar" bindtap="chooseImage" mode="aspectFill" src="{{ groupInfo.filePath }}"></image>

      <text>基本信息</text>
      <view class="input-container">
        <text>群名称</text>
        <input placeholder="群名称" maxlength="20" data-key="groupInfo.name" value="{{ groupInfo.name }}" bindchange="inputChange" />
      </view>
      <view class="input-container">
        <text>群ID</text>
        <input value="{{ groupInfo.code }}" disabled="true"/>
      </view>
      <text>群简介</text>
      <textarea data-key="groupInfo.description" maxlength="100" value="{{ groupInfo.description }}" bindblur="inputChange" auto-height placeholder="描述" />
    </view>

    <!-- 其它设置 -->
    <view class="inputs">
      <text>其它设置</text>
      <view class="input-container">
        <text>加群方式</text>
        <picker mode="selector" data-key="groupInfo.status" bindchange="inputChange" value="{{ groupInfo.status }}" range="{{ joinGroupArray }}">
          <view class="picker">
            {{ joinGroupArray[groupInfo.status] }}
          </view>
        </picker>
      </view>
    </view>

    <text class="message">{{message}}</text>

    <view class="btns">
      <!-- <button bindtap="">保存修改</button> -->
      <button disabled="{{ loading }}" loading="{{ loading }}" bindtap="disbandGroup">解散</button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import request from '@/utils/request.js'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '群组信息',
    }

    data = {
      groupId: '',
      groupInfo: {},
      message: '',
      loading: false,
      joinGroupArray: ['允许加入', '不允许加入'],
    }

    watch = {
      groupInfo (newValue, oldValue) {
        if(!oldValue.name){
          return
        }
        let self = this

        if(self.groupInfo.name == ''){
          return wx.showToast({
            title: '名称不能为空！',
            icon: 'none',
            duration: 1000
          })
        }

        let data = {
          groupId: self.groupId,
          groupInfo: {
            name: self.groupInfo.name,
            description: self.groupInfo.description,
            status: self.groupInfo.status || 0,
            update_at: new Date()
          }
        }

        if(self.groupInfo.filePath && self.groupInfo.filePath.indexOf('grayclass')<0){
          const uploadTask = wx.uploadFile({
            url: 'https://api.grayclass.site:2333/api/setGroupInfo',
            filePath: self.groupInfo.filePath,
            name: 'file',
            formData: data,
            success(res) {
              self.message = '更新成功！'
              self.$apply()
              setTimeout(() => {
                self.message = ''
                self.$apply()
              }, 2000);
            }
          })
        }
        else{
          request.post('/setGroupInfo', data)
          .then(res=>{
            self.message = '更新成功！'
            self.$apply()
            setTimeout(() => {
              self.message = ''
              self.$apply()
            }, 2000);
          })
        }
      }
    }

    methods = {
      updateGroupInfo(self){
        if(self.groupInfo.name == ''){
          return wx.showToast({
            title: '名称不能为空！',
            icon: 'none',
            duration: 1000
          })
        }

        let data = {
          groupId: self.groupId,
          groupInfo: {
            name: self.groupInfo.name,
            description: self.groupInfo.description,
            status: self.groupInfo.status || 0,
            update_at: new Date()
          }
        }

        if(self.groupInfo.filePath && self.groupInfo.filePath.indexOf('grayclass')<0){
          const uploadTask = wx.uploadFile({
            url: 'https://api.grayclass.site:2333/api/setGroupInfo',
            filePath: self.groupInfo.filePath,
            name: 'file',
            formData: data,
            success(res) {
              self.message = '更新成功！'
              self.$apply()
              setTimeout(() => {
                self.message = ''
                self.$apply()
              }, 2000);
            }
          })
        }
        else{
          request.post('/setGroupInfo', data)
          .then(res=>{
            self.message = '更新成功！'
            self.$apply()
            setTimeout(() => {
              self.message = ''
              self.$apply()
            }, 2000);
          })
        }
      },
      chooseImage(){
        let self = this

        wx.chooseImage({
          count: 1,
          sizeType: ['original', 'compressed'],
          success(res) {
            // 压缩图片
            if(res.tempFilePaths.length > 0){
              wx.compressImage({
                src: res.tempFilePaths[0],
                quality: 50,
                success(res){
                  self.groupInfo.filePath = res.tempFilePath
                  self.$apply()
                  self.methods.updateGroupInfo(self)
                },
                fail(){
                  self.groupInfo.filePath = res.tempFilePaths[0]
                  self.$apply()
                  self.methods.updateGroupInfo(self)
                }
              })
            }
          }
        })
      },
      inputChange(e){
        let self = this
        const keyArr = e.currentTarget.dataset.key.split('.')

        if(keyArr.length == 1){
          this[keyArr[0]] = e.detail.value
        }
        else if(keyArr.length == 2){
          this[keyArr[0]][keyArr[1]] = e.detail.value
        }
        else if(keyArr.length == 3){
          this[keyArr[0]][keyArr[1]][keyArr[2]] = e.detail.value
        }
      },
      disbandGroup(){
        let self = this

        wx.showModal({
          title: '提示',
          content: `确定解散群组？`,
          success(res) {
            if (res.confirm) {
              self.loading = true
              self.$apply()

              // 请求参数
              let data = {
                groupId: self.groupId,
              }
              request.post('/disbandGroup', data)
              .then(res=>{
                wx.showToast({
                  title: '解散成功！',
                  icon: 'success',
                  duration: 1000
                })
                setTimeout(() => {
                  wx.switchTab({
                    url: '/pages/index'
                  })
                }, 1000);
              })
            } 
          }
        })
      }
    }

    onLoad(option){
      let self = this
      
      self.groupId = option.group_id

      request.post('/getGroupInfoById', {groupId: self.groupId})
      .then(res=>{
        if(res.data.filePath){
          res.data.filePath = 'https://api.grayclass.site:2333' + res.data.filePath
        }

        self.groupInfo = res.data
        self.$apply()
      })
    }
  }
</script>
