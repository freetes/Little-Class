<style lang="less">
page{
}

.container{
  background-image: linear-gradient(to bottom, white, #ddd);

  .buttons{
    position: fixed;
    right: 20px;
    bottom: 20px;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    z-index: 20;

    >image{
      width: 20px;
      height: 20px;
      background-color: white;
      padding: 10px 10px;
      border: 1px solid black;
      border-radius: 50%;
      animation: showBtns 0.5s ease;

      @keyframes showBtns {
        from {
          margin-right: -100px;
          opacity: 0;
        }
        to {
          margin-right: 0px;
          opacity: 1;
        }
      }
    }
  }

  .modal-container{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 30;
    background-color: rgba(0, 0, 0, 0.7);

    >.modal-main{
      background-color: #fff;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      padding: 10px 10px;
      padding-bottom: 0;
      animation: showModal 0.8s ease;

      @keyframes showModal {
        from {
          transform: scale(0.8, 0.8);
          opacity: 0;
        }
        to {
          transform: scale(1, 1);
          opacity: 1;
        }
      }

      >.modal-title{
        border-bottom: 1px solid light#8A8A8A;
      }
      >.modal-message{
        text-align: right;
        font-size: 14px;
        color: #555;
        width: 100%;
      }
      >input{
        margin: 10px 0;
        padding: 10px 0;
        text-align: center;
        border: 1px solid #8A8A8A;
      }
      >button{
        background-color: white;
      }
      >button::after{
        border: none;
      }
    }
  }

  .oneWord-list{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    width: 100%;
    padding: 20px 5%;
    animation: showIn 0.5s ease;

    @keyframes showIn {
      from {
        margin-top: 40px;
        opacity: 0;
      }
      to {
        margin-top: 0px;
        opacity: 1;
      }
    }

    >.oneWord-item{
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      width: 100%;
      border: none;
      border-radius: 5px;
      margin-bottom: 20px;
      background-color: white;
      // box-shadow: 0 5px 5px light#8A8A8A;
      
      >.content{
        font-size: 16px;
        color: black;
        font-weight: bold;
        padding: 15px 10px;
      }
      >view{
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        width: 100%;
        padding: 10px 10px;
        font-size: 12px;
        color: #8A8A8A;
      }
    }
  }

  .blank{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;

    >text.logo{
      font-size: 14px;
      font-weight: bold;
      color: #8A8A8A;
      border: 1px dashed #8A8A8A;
      padding: 5px 5px;
      border-radius: 50%;
      width: 20px;
      height: 20px;
      line-height: 20px;
      text-align: center;
    }
    >text{
      font-size: 12px;
      // font-weight: ;
      color: #8A8A8A;
      margin-top: 5px;
      text-align: center;
    }
  }

  .loading{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: 30;

    >image{
      width: 80px;
      height: 80px;
    }
  }

  .time{
    margin-top: -40px;
    padding:0 5%;
    color: #8A8A8A;
    font-weight: lighter;

    >text.date{
      font-size: 40px;
      letter-spacing: 5px;
    }
  }
}
</style>
<template>
  <view class="container">

    <view class="time">
      <text class="date">{{ time }}</text>
      <text class="week">{{ ['周日', '周一', '周二', '周三', '周四', '周五', '周六'][week] }}</text>
    </view>

    <view class="buttons">
      <image data-url="/pages/createOneWord" src="../static/icons/create_group.png" bindtap="goto"></image>
    </view>

    <view class="oneWord-list" wx:if="{{ oneWords.length != 0 }}">
      <view class="oneWord-item" wx:for="{{ oneWords }}">
        <text class="content">{{ item.content }}</text>
      </view>
    </view>

    <!-- 为空时 -->
    <view class="blank" wx:if="{{ !loading && groups.length == 0 }}">
      <text class="logo">空</text>
      <block wx:if="{{ !userId }}">
        <text>您还没有登录</text>
        <text>请先登录</text>
      </block>
      <block wx:else>
        <text>您还没有签到群组</text>
        <text>点击「+」新建一个试试吧</text>
      </block>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import request from '@/utils/request.js'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '灰度签到'
    }

    data = {
      userId: '',
      oneWords: [],
      loading: true,
      showInput: false,
      time: (new Date()).getDate(),
      week: (new Date()).getDay()
    }

    computed = {
    }

    methods = {
      goto(e){
        wx.navigateTo({url: e.currentTarget.dataset.url})
      },
      toggleInput(){
        this.showInput = !this.showInput
      },
      inputChange(e){
        let self = this
        const keyArr = e.currentTarget.dataset.key.split('.')

        if(keyArr.length == 1){
          this[keyArr[0]] = e.detail.value
        }
        else if(keyArr.length == 2){
          this[keyArr[0]][keyArr[1]] = e.detail.value
        }
        else if(keyArr.length == 3){
          this[keyArr[0]][keyArr[1]][keyArr[2]] = e.detail.value
        }
      },
    }

    onLoad(){

    }
    onShareAppMessage() {
    }

    onShow() {
      let self = this, userId = wx.getStorageSync('userId')

      // 判断是否登录
      if(userId){
        self.userId = userId

      }
      else{
        self.loading = false
      }

      request.post('/getOneWords')
      .then(res=>{
        self.oneWords = res.data

        self.$apply()
      })
    }
    onHide(){
    }
  }
</script>
