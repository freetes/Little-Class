<style lang="less">
page{
}

.container{

  swiper{
    display: flex;
    width: 100%;
    height: 500px;
    margin: 50px 0;
    box-sizing: border-box;
  }

  swiper-item{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    width: 100%;
    height: 100%;
    padding: 20px;
    box-sizing: border-box;
    border: 10px solid #ededed;
    border-radius: 20px;
    background-color: white;

    >.title{
      flex: 0 0 auto;
      width: 100%;
      font-size: 20px;
      color: black;
      font-weight: normal;
      padding: 15px 0;
    }
    >.content{
      flex: 1 0 auto;
      width: 100%;
      line-height: 20px;
      max-height: 200px;
      font-size: 16px;
      color: #555;
      font-weight: lighter;
      margin: 15px 0;
      display: -webkit-box;
      -webkit-line-clamp: 10;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
    >.others{
      flex: 1 0 auto;
      padding-top: 20px;
      width: 100%;
      text-align: right;
      font-size: 14px;
      color: #555;
      font-weight: lighter;
      display: flex;
      flex-direction: row;
      justify-content: flex-end;
      align-items: flex-end;
    }
  }

  .blank{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;

    >text.logo{
      font-size: 14px;
      font-weight: bold;
      color: #8A8A8A;
      border: 1px dashed #8A8A8A;
      padding: 5px 5px;
      border-radius: 50%;
      width: 20px;
      height: 20px;
      line-height: 20px;
      text-align: center;
    }
    >text{
      font-size: 12px;
      // font-weight: ;
      color: #8A8A8A;
      margin-top: 5px;
      text-align: center;
    }
  }

  .loading{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: 30;

    >image{
      width: 80px;
      height: 80px;
    }
  }

  >.header{
    width: 90%;
    height: 60px;
    margin: 0 5%;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;

    >.time-container{
      color: #8A8A8A;
      font-weight: lighter;

      >text.date{
        font-size: 40px;
        letter-spacing: 5px;
      }
    }

    >.tabs{
      display: flex;
      flex-direction: row;
      justify-content: flex-end;
      align-items: center;

      >text{
        font-size: 16px;
        margin-right: 10px;
        animation: showBtns 0.5s ease;
      }

      >.create-icon{
        width: 20px;
        height: 20px;
        padding: 5px 5px;
        border: 1px solid black;
        border-radius: 50%;
        animation: showBtns 0.5s ease;
      }

      @keyframes showBtns {
        from {
          margin-right: -100px;
          opacity: 0;
        }
        to {
          margin-right: 0px;
          opacity: 1;
        }
      }
    }
  }
  
}
</style>
<template>
  <view class="container">

    <view class="header">
      <view class="time-container" bindlongpress="goto('/pages/grayClock')">
        <text class="date">{{ time }}</text>
        <text class="week">{{ ['周日', '周一', '周二', '周三', '周四', '周五', '周六'][week] }}</text>
      </view>
      <view class="tabs">
        <text wx:if="{{ showMyNotes }}" bindtap="toggleNotes">我的</text>
        <text wx:else bindtap="toggleNotes">全部</text>

        <image class="create-icon" src="../static/icons/add.png" bindtap="goto('/pages/createNote')"></image>
      </view>
    </view>

    <swiper wx:if="{{ showMyNotes }}" class="notes-container" previous-margin="30px" next-margin="30px" style="height: {{ swiperHeight + 'px'}}" circular="{{ true }}">
      <block wx:for="{{ myNotes }}" wx:key="note">
        <swiper-item class="note-item" bindtap="goto('/pages/noteInfo?note_id={{item._id}}')">
          <text class="title">{{ item.title }}</text>
          <text class="content">{{ item.content }}</text>
          <view class="others">
            <text>浏览次数：{{ item.view_count }}</text>
          </view>
        </swiper-item>
      </block>
    </swiper>

    <swiper wx:else class="notes-container" previous-margin="30px" next-margin="30px" style="height: {{ swiperHeight + 'px'}}" circular="{{ true }}">
      <block wx:for="{{ allNotes }}" wx:key="note">
        <swiper-item class="note-item" bindtap="goto('/pages/noteInfo?note_id={{item._id}}')">
          <text class="title">{{ item.title }}</text>
          <text class="content">{{ item.content }}</text>
          <view class="others">
            <text>浏览次数：{{ item.view_count }}</text>
          </view>
        </swiper-item>
      </block>
    </swiper>

    <!-- 为空时 -->
    <view class="blank" wx:if="{{ !loading && groups.length == 0 }}">
      <text class="logo">空</text>
      <block wx:if="{{ !userId }}">
        <text>您还没有登录</text>
        <text>请先登录</text>
      </block>
      <block wx:else>
        <text>您还没有笔记</text>
        <text>点击「+」新建一个试试吧</text>
      </block>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import request from '@/utils/request.js'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '我的笔记',
      enablePullDownRefresh: true
    }

    data = {
      userId: '',
      myNotes: [],
      allNotes: [],
      loading: true,
      showInput: false,
      swiperHeight: 600,
      showMyNotes: true,
      time: (new Date()).getDate(),
      week: (new Date()).getDay()
    }

    computed = {
    }

    methods = {
      toggleNotes(){
        this.showMyNotes = !this.showMyNotes
      },
      goto(url){
        wx.navigateTo({url})
      },
      toggleInput(){
        this.showInput = !this.showInput
      },
      inputChange(e){
        let self = this
        const keyArr = e.currentTarget.dataset.key.split('.')

        if(keyArr.length == 1){
          this[keyArr[0]] = e.detail.value
        }
        else if(keyArr.length == 2){
          this[keyArr[0]][keyArr[1]] = e.detail.value
        }
        else if(keyArr.length == 3){
          this[keyArr[0]][keyArr[1]][keyArr[2]] = e.detail.value
        }
      },
    }

    onLoad(){

    }

    // 下拉刷新
    onPullDownRefresh() {
      this.onShow()
      wx.stopPullDownRefresh()
    }

    onShareAppMessage() {
    }

    onShow() {
      let self = this, userId = wx.getStorageSync('userId')

      // 判断是否登录
      if(userId){
        self.userId = userId

        request.post('/getNotesByUserId', {userId})
        .then(res=>{
          self.myNotes = res.data

          self.$apply()
        })
      }
      else{
      }

      request.post('/getAllNotes', {})
      .then(res=>{
        self.allNotes = res.data

        self.$apply()
      })

      // 响应式设置高度
      const res = wx.getSystemInfoSync()
      self.swiperHeight = res.windowHeight - 160
      
      self.loading = false
    }
  }
</script>
