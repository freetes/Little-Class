<style lang="less">
page{
  background-color: #ededed;
}

.container{
  >.notices-container{
    display: flex;
    flex-direction: column;;
    justify-content: flex-start;
    align-items: flex-start;
    margin: 10px 5%;
    width: 90%;

    >.title{
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      color: #8A8A8A;
      font-size: 14px;
      margin: 10px 0;
    }
    >.notice-container{
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      flex-wrap: wrap;
      background-color: white;
      padding: 15px;
      border-radius: 15px;
      margin-bottom: 10px;
      width: 100%;

      >.top{
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        width: 100%;

        >.title{
          width: 100%;
          font-size: 18px;
          line-height: 24px;
          height: 24px;
        }
      }

      >.content{
        width: 100%;
        font-size: 14px;
        line-height: 18px;
        margin: 10px 0;
        color: gray;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 2;
        overflow: hidden;
      }

      >.footer{
        width: 100%;
        font-size: 12px;
        color: gray;

        >.count{
          margin-left: 10px;
        }
      }
    }
  }
  >.btns{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 90%;
    margin: 5px 5%;
    background-color: white;
    border-radius: 10px;

    >text{
      line-height: 30px;
      padding: 10px 20px;
      background-color: white;
      font-size: 15px;
      color: black;
      font-weight: 500;
      text-align: center;
    }
    >.disable{
      color: #8A8A8A;
    }
  }

  >.notice-modal{
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    min-height: 100%;
    padding: 15px;
    background-color: #ededed90;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;

    >view{
      width: 100%;
      height: 100%;
      border-radius: 10px;
      padding: 10px;
      background-color: white;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      box-shadow: 0 10px 10px lightgray;
      animation: showIn 0.7s ease;

      @keyframes showIn {
        from {
          margin-top: -100%;
          opacity: 0;
        }
        to {
          margin: 0px;
          opacity: 1;
        }
      }

      >.top{
        width: 100%;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;

        >text{
          font-size: 14px;
          color: gray;
          line-height: 20px;
        }
        >.iconfont{
          font-size: 20px;
        }
      }

      >.title{
        width: 100%;
        font-size: 18px;
        line-height: 30px;
        height: 30px;
        margin-top: 10px;
        font-weight: 500;
      }

      >.content{
        width: 100%;
        font-size: 15px;
        padding: 10px 0;
        line-height: 20px;
      }

      >.footer{
        width: 100%;
        font-size: 12px;
        color: gray;

        >.count{
          margin-left: 10px;
        }
      }
    }
  }

}
</style>
<template>
  <view class="container">

    <view class="btns" wx:if="{{ userLevel==1 }}">
      <text bindtap="goto('/pages/createNotice?group_id={{groupId}}')">创建通知</text>
    </view>

    <!-- 通知 信息 -->
    <view class="notices-container">
      <view class="title">
        <text>所有通知</text>
      </view>
      <view class="notice-container" bindlongpress="deleteNotice('{{ index }}')" bindtap="showNotice('{{ index }}')" wx:if="{{ notices.length!=0 }}" wx:for="{{ notices }}" wx:key="{{ item._id }}">
        <view class="top">
          <text class="title">{{ item.title }}</text>
        </view>
        <text class="content">{{ item.content }}</text>
        <view class="footer">
          <text>{{ item.createAt }}</text>
          <!-- <text class="count">浏览次数：{{ item.view_count }}</text> -->
        </view>
      </view>
    </view>

    <view class="notice-modal" wx:if="{{ selectIndex >= 0 }}">
      <view>
        <view class="top">
          <text class="">通知详情</text>
          <text bindtap="hideNotice" class="iconfont">&#xeafa;</text>
        </view>

        <text class="title">{{ notices[selectIndex].title }}</text>

        <text class="content">{{ notices[selectIndex].content }}</text>

        <view class="footer">
          <text>{{ notices[selectIndex].createAt }}</text>
          <text class="count">浏览次数：{{ notices[selectIndex].view_count }}</text>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import request from '@/utils/request.js'
  import util from '@/utils/util.js'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '通知信息',
    }

    data = {
      groupId: '',
      userId: '',
      notices: [],
      message: '',
      userLevel: 0,
      selectIndex: -1
    }

    methods = {
      hideNotice(index){
        this.selectIndex = -1
      },
      deleteNotice(index){
        let self = this

        if(self.userLevel != 1){
          return
        }

        wx.showModal({
          title: '提示',
          content: '确定删除通知？',
          success(res) {
            if (res.confirm) {
              request.post('/deleteNotice', {noticeId: self.notices[index]._id})
              .then(res=>{

                self.onShow()
              })
            } 
          }
        })
      },
      showNotice(index){
        let self = this

        self.selectIndex = index

        request.post('/getNoticeById', {noticeId: self.notices[index]._id})
        .then(res=>{
          
          self.$apply()
        })
      },
      goto(url){
        wx.navigateTo({url})
      },
      inputChange(e){
        let self = this
        const keyArr = e.currentTarget.dataset.key.split('.')

        if(keyArr.length == 1){
          this[keyArr[0]] = e.detail.value
        }
        else if(keyArr.length == 2){
          this[keyArr[0]][keyArr[1]] = e.detail.value
        }
        else if(keyArr.length == 3){
          this[keyArr[0]][keyArr[1]][keyArr[2]] = e.detail.value
        }
      },
    }

    onLoad(option) {
      let self = this

      self.groupId = option.group_id
    }

    onShow(){
      let self = this, userId = wx.getStorageSync('userId')

      self.userId = userId
      
      request.post('/getNoticesByGroupId', {groupId: self.groupId})
      .then(res=>{
        for(let item of res.data){
          item.createAt = util.moment(item.create_at).fromNow()
        }
        self.notices = res.data
        
        self.$apply()
      })

      request.post('/getUserLevel', {groupId: self.groupId, userId})
      .then(res=>{
        self.userLevel = res.data
        
        self.$apply()
      })
    }
  }
</script>
