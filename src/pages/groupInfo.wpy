<style lang="less">
.container{
  >.groupInfo{
    position: fixed;
    top: 0;
    left: 0;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: flex-start;
    width: 100%;
    height: 200px;
    padding: 10px 0;
    background-image: url('https://wechat-public.oss-cn-beijing.aliyuncs.com/photo-1450849608880-6f787542c88a.jpeg');
    background-size: cover;
    z-index: -1;

    >.title{
      padding: 0 20px;
      padding-bottom: 10px;
      font-size: 16px;
      font-weight: bold;      
      color: white;
    }
    >view{
      width: 100%;
      padding: 0 20px;
      padding-bottom: 20px;
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      font-size: 14px;
      color: gray;
    }
  }

  >.members{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    width: 92%;
    margin: 5px 4%;
    padding: 10px 10px;
    background-color: white;
    border-radius: 10px;

    >view.title{
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      margin-bottom: 10px;

      >text{
        font-size: 14px;
        color: black;
        font-weight: bold;
      }
      >text.assist{
        font-size: 12px;
        color: gray;
        font-weight: normal;
      }
    }

    >view{
      display: flex;
      flex-direction: row;
      justify-content: flex-start;
      align-items: flex-start;
      flex-wrap: wrap;
      width: 100%;

      >image{
        display: inline-block;
        width: 20%;
        max-height: 70px;
        margin-left: 4%;
        margin-bottom: 5px;
        border-radius: 50%;
      }
    }
  }

  >.check-form{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    width: 92%;
    margin: 5px 4%;
    padding: 10px 10px;
    background-color: white;
    border-radius: 10px;

    >view.title{
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      margin-bottom: 10px;

      >text{
        font-size: 14px;
        color: black;
        font-weight: bold;
      }
      >text.assist{
        font-size: 12px;
        color: gray;
        font-weight: normal;
      }
    }

    >view.info{
      display: flex;
      flex-direction: row;
      justify-content: flex-start;
      align-items: flex-start;
      flex-wrap: wrap;
      width: 100%;
      font-size: 14px;

      >view{
        width: 100%;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;

        >text.title{
          font-weight: bold;
        }
      }
    }

    >view.member{
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      width: 100%;
      margin: 10px 0;

      >view.title{
        font-size: 14px;
        color: black;
        font-weight: bold;

        >text.assist{
          background-color: lightgray;
          color: black;
          padding: 5px 10px;
          border-radius: 10px;
          line-height: 20px;
          text-align: center;
          margin-left: 10px;
        }
      }

      >view.status{
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: flex-start;
        width: 100%;
        margin-bottom: 10px;

        >view{
          display: flex;
          flex-direction: row;
          justify-content: space-between;
          align-items: center;
          width: 100%;
          margin: 5px 0;
          font-size: 14px;
        }
      }
    }
  }

  >.check-history{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    width: 92%;
    margin: 5px 4%;
    padding: 10px 10px;
    background-color: white;
    border-radius: 10px;

    >view.title{
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      margin-bottom: 10px;

      >text{
        font-size: 14px;
        color: black;
        font-weight: bold;
      }
      >text.assist{
        font-size: 12px;
        color: gray;
        font-weight: normal;
      }
    }

    >view.history{
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      width: 100%;
      margin: 10px 0;

      >view.title{
        font-size: 14px;
        color: black;
        font-weight: bold;

        >text.assist{
          background-color: lightgray;
          color: black;
          padding: 5px 10px;
          border-radius: 10px;
          line-height: 20px;
          text-align: center;
          margin-left: 10px;
        }
      }

      >view.status{
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        width: 100%;
        margin-bottom: 10px;
        font-size: 14px;
      }
    }
  }
  
  >.btns{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 92%;
    margin: 5px 4%;
    margin-bottom: 20px;
    padding: 5px 0;
    background-color: white;
    border-radius: 10px;

    >button{
      padding: 5px 0%;
      background-color: white;
      font-size: 14px;
      font-weight: bold;
    }
    >button::after{
      border: none;
    }
    >.disable{
      color: gray;
    }
  }
}

.blank{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100px;

  >text{
    font-size: 14px;
    font-weight: bold;
    color: black;
    border: 1px dashed black;
    padding: 5px 5px;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    line-height: 20px;
    text-align: center;
  }
}
</style>
<template>
  <view class="container">

    <!-- 群组 信息 -->
    <view class="groupInfo">
      <text class="title">{{ groupInfo.name }}</text>
      <view>
        <text>ID：{{ groupInfo.groupCode }}</text>
      </view>
    </view>

    <view style="margin-top: 180px;"></view>
    
    <!-- 成员 信息 -->
    <view class="members" wx:if="{{ userInfo._id == groupInfo.owner}}">
      <view class="title">
        <text>成员</text>
        <text class="assist">{{ groupInfo.members.length==0?'空空无人':'共' + groupInfo.members.length + '人'}}</text>
      </view>
      <view wx:if="{{ groupInfo.members.length != 0 }}" wx:key="user_id">
        <image mode="widthFix" wx:for="{{ groupInfo.members }}" src="{{ item.user_info.avatarUrl }}"></image>
      </view>
    </view>

    <!-- 签到表 信息 -->
    <view class="check-form">
      <view class="title">
        <text>最近签到记录</text>
      </view>
      <view class="blank" wx:if="{{ !check }}">
        <text>空</text>
      </view>
      <view class="info" wx:if="{{ !!check }}">
        <view>
          <text class="title">{{ check.title }}</text>
          <text class="status">{{ check.statusWords }}</text>
        </view>
        <text>{{ check.createAt }} - {{ check.endTime }}</text>
      </view>
      <view class="member" wx:if="{{ !!check }}">
        <!-- 成功签到 -->
        <view class="title">
          <text>签到成功</text>
          <text class="assist">{{ check.success.length }}</text>
        </view>
        <view class="status">
          <view wx:for="{{ check.success }}" wx:key="user_id">
            <text>{{ item.user_info.name }}</text>
            <text>{{ '签到成功' }}</text>
          </view>
        </view>

        <!-- 签到失败。不在有效范围 -->
        <view wx:if="{{ check.fail.length!=0 }}" class="title">
          <text>签到失败，不在有效范围内</text>
          <text class="assist">{{ check.fail.length }}</text>
        </view>
        <view class="status">
          <view wx:if="{{ check.fail.length!=0 }}" wx:for="{{ check.fail }}" wx:key="user_id">
            <text>{{ item.user_info.name }}</text>
            <text>{{ '距离太远' }}</text>
          </view>
        </view>
        <!-- 未签到 -->
        <view class="title">
          <text>未签到</text>
          <text class="assist">{{ check.none.length }}</text>
        </view>
        <view class="status">
          <view wx:for="{{ check.none }}" wx:key="user_id">
            <text>{{ item.user_info.name }}</text>
            <text>{{ '未签到' }}</text>
          </view>
        </view>
      </view>
    </view>

    <!-- 签到表 信息 -->
    <view class="check-history">
      <view class="title">
        <text>历史签到</text>
      </view>
      <view class="blank" wx:if="{{groupInfo.checkForm.length == 0}}">
        <text>空</text>
      </view>
      <view class="history" wx:for="{{groupInfo.checkForm}}">
        <view class="title">
          <text>{{ item.title }}</text>
        </view>
        <view class="status">
          <text>{{ item.createAt }}</text>
          <text wx:if="{{ userInfo._id != groupInfo.owner}}">{{item.userStatus == 1?'签到成功':item.userStatus == -1?'签到失败，不在规定范围':'未签到'}}</text>
          <text wx:else>{{ item.success + '/' + groupInfo.members.length }}</text>
        </view>
      </view>
    </view>

    <!--  -->


    <view class="btns">
      <!-- 普通用户 功能 -->
      <button hover-class="none" wx:if="{{ !isJoined && groupInfo.status != -1 }}" bindtap="joinGroup">申请加群</button>
      <text class="disable" disabled="{{ true }}" hover-class="none" wx:if="{{ !isJoined && groupInfo.status == -1 }}">加入已关闭，无法加入</text>
      <button hover-class="none" wx:if="{{ userInfo._id != groupInfo.owner && canCheck }}" bindtap="getChecked">立即签到</button>
      <button hover-class="none" wx:if="{{ userInfo._id != groupInfo.owner && isJoined}}">退出</button>
      <!-- 拥有者 功能 -->
      <button hover-class="none" wx:if="{{ userInfo._id == groupInfo.owner }}" bindtap="gotoCreateCheck">开启签到</button>
      <button hover-class="none" wx:if="{{ userInfo._id == groupInfo.owner }}" bindtap="gotoEditGroupInfo">修改信息</button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '群组信息'
    }

    data = {
      groupInfo: {
        checkForm: [],
        members: []
      },
      userInfo: {},
      _id: '',
      check: undefined,
      isJoined: true,
      canCheck: false
    }

    computed = {
    }

    watch = {
      groupInfo (newValue, oldValue) {
        let self = this

        // 判断能否加入
        if(self.userInfo._id == newValue.owner){
          self.isJoined = true
        }
        else{
          if(newValue.members.length == 0){
            self.isJoined = false
          }
          for(let item of newValue.members){
            if(item.user_id == self.userInfo._id){
              self.isJoined = true
              break
            }
            else{
              self.isJoined = false
            }
          }
        }

        // 判断能否签到
        if(self.userInfo._id != newValue.owner && newValue.checkForm && newValue.checkForm.length == 0){
          self.canCheck = false
        }
        else{
          const db = wx.cloud.database()
          
          if(newValue.checkForm.length != 0){
            db.collection('checks').doc(newValue.checkForm[newValue.checkForm.length-1])
            .get({
              success: function(res) {
                // 最近的签到信息

                res.data.endTime >= new Date() ? self.canCheck=true : self.canCheck=false

                res.data.success = []
                res.data.fail = []
                res.data.none = []
                for(let member of newValue.members){
                  member.status = 0  // 未签到
                  for(let checkedUser of res.data.members){
                    if(checkedUser.user_id == member.user_id){
                      member.status = checkedUser.status
                      break
                    }
                  }

                  if(member.status == 0){
                    res.data.none.push(member)
                  }
                  else if(member.status == 1){
                    res.data.success.push(member)
                  }
                  else if(member.status == -1){
                    res.data.fail.push(member)
                  }
                }

                self.check = res.data
                self.groupInfo = newValue
                self.$apply()
              }
            })
          }
        }
      },
      check(val){
        let createTime = new Date(val.createAt), endTime = new Date(val.endTime)

        val.status = (new Date(val.endTime))<(new Date())?'1':'0'
        val.statusWords = val.status==1?'已结束':'进行中'
        val.createAt = `${createTime.getFullYear()}/${createTime.getMonth()+1}/${createTime.getDate()} ${createTime.getHours()}:${createTime.getMinutes()}`
        val.endTime = `${endTime.getFullYear()}/${endTime.getMonth()+1}/${endTime.getDate()} ${endTime.getHours()}:${endTime.getMinutes()}`
      },
    }

    methods = {
      inputChange(e){
        let self = this
        const keyArr = e.currentTarget.dataset.key.split('.')

        if(keyArr.length == 2){
          this[keyArr[0]][keyArr[1]] = e.detail.value
        }
        else if(keyArr.length == 3){
          this[keyArr[0]][keyArr[1]][keyArr[2]] = e.detail.value
        }
      },
      joinGroup(){
        let self = this, wxInfo = wx.getStorageSync('wxInfo')
        
        // 判断是否可以加入
        if(self.groupInfo.status == -1){
          wx.showToast({
            title: '无法加入',
            icon: 'none',
            duration: 2000,
            mask: true
          })
          return
        }

        // 请求参数
        let data = {
          group_id: self._id,
          user_id: self.userInfo._id,
          user_info: {
            avatarUrl: wxInfo.avatarUrl,
            name: self.userInfo.name,
            gender: self.userInfo.gender,
          }
        }

        // 调用云函数
        wx.cloud.callFunction({
          name: 'joinGroup',
          data: data
        }).then(res=>{
          delete data.group_id

          self.groupInfo.members.push(data)
          self.isJoined = true

          self.$apply()
          
          wx.showToast({
            title: '加入成功！',
            icon: 'success',
            duration: 1500,
            mask: true
          })
        })
      },
      gotoCreateCheck(){
        wx.navigateTo({url: '/pages/createCheck?_id='+this._id})
      },
      gotoEditGroupInfo(){
        wx.navigateTo({url: '/pages/editGroupInfo?_id='+this._id})
      },
      getChecked(){
        let self = this
        
        const db = wx.cloud.database(), _ = db.command

        let ownerPosition = self.check.position.split('-')
        // 获取经纬度坐标
        wx.getLocation({
          type: 'wgs84',
          success (res) {
            let now = new Date()
            /*
              time: Date,
              user_id: ,
              position: String,
              status: Number,     1 to success, -1 to fail because of the position
            */
            
            let data = {
              time: Date.now(),
              user_id: self.userInfo._id,
              position: res.latitude + '-' + res.longitude
            }

            if(self.check.distance == -1){
              data.status = 1
            }
            else{
              let distance = getGreatCircleDistance(res.latitude, res.longitude, ownerPosition[0], ownerPosition[1])
              data.status = distance <= self.check.distance?1:-1
            }

            // 调用云函数
            wx.cloud.callFunction({
              name: 'getChecked',
              data: {
                check_id: self.check._id,
                check_info: data
              }
            }).then(res=>{
              self.canCheck = false

              self.$apply()
              
              wx.showToast({
                title: '签到成功！',
                icon: 'success',
                duration: 1500,
                mask: true
              })
            })
            
            // 通过经纬度获取距离（单位：米）
            function getGreatCircleDistance(lat1,lng1,lat2,lng2){
              var EARTH_RADIUS = 6378137.0;

              var radLat1 = lat1*Math.PI/180.0;
              var radLat2 = lat2*Math.PI/180.0;
              
              var a = radLat1 - radLat2;
              var b = lng1*Math.PI/180.0 - lng2*Math.PI/180.0;
              
              var s = 2*Math.asin(Math.sqrt(Math.pow(Math.sin(a/2),2) + Math.cos(radLat1)*Math.cos(radLat2)*Math.pow(Math.sin(b/2),2)));
              s = s*EARTH_RADIUS;
              s = Math.round(s*10000)/10000.0;
                      
              return s;
            }
          },
          fail (res){
            console.log(res)
          }
        })
      }
    }

    onLoad(option) {
      let self = this, _id = wx.getStorageSync('_id')

      if(_id){
        self.userInfo._id = _id
      }
      self._id = option._id
      
      const db = wx.cloud.database(), _ = db.command

      wx.cloud.callFunction({
        name: 'getGroupById',
        data: {group_id: option._id}
      }).then(res=>{
        console.log(res)
        self.groupInfo = res.result.data
        self.$apply()

        // 获得签到历史表
        if(res.result.data.checkForm.length != 0){
          db.collection('checks').where(_.or(res.result.data.checkForm.map(item=>{return {_id: item}})))
          .get({
            success(res) {
              for(let item of res.data){
                let createTime = new Date(item.createAt), endTime = new Date(item.endTime)
                item.success = 0
                item.createAt = `${createTime.getFullYear()}/${createTime.getMonth()+1}/${createTime.getDate()} ${createTime.getHours()}:${createTime.getMinutes()}`
                item.endTime = `${endTime.getFullYear()}/${endTime.getMonth()+1}/${endTime.getDate()} ${endTime.getHours()}:${endTime.getMinutes()}`

                for(let member of item.members){
                  if(member.status == 1){
                    item.success = item.success + 1
                  }
                  if(member.user_id == self.userInfo._id){
                    item.userStatus = member.status
                  }
                }
              }

              res.data.sort((a, b)=>new Date(b.endTime) - new Date(a.endTime))
              self.groupInfo.checkForm = res.data
              self.$apply()
            }
          })
        }
      })

      db.collection('users').doc(_id)
      .get({
        success: function(res) {
          self.userInfo = res.data
          self.$apply()
        }
      })
    }
  }
</script>
