<style lang="less">
page{
}
.container{
  padding-top: 0;
  padding-bottom: 20px;
  
  >.groupInfo{
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: flex-start;
    width: 100%;
    height: 140px;
    padding: 10px 0;

    >.title{
      padding: 0 20px;
      padding-bottom: 10px;
      font-size: 24px;
      font-weight: bold;
      color: black;
    }
    >view{
      width: 100%;
      padding: 0 20px;
      padding-bottom: 20px;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      font-size: 14px;
      color: gray;

      >.description{
        width: 100%;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 4;
        overflow: hidden;
      }
    }
  }

  >.modules-container{
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: flex-start;
    flex-wrap: wrap;
    width: 90%;
    margin: 5px 5%;
    padding: 10px;
    background-color: white;
    border-radius: 10px;

    >view{
      display: flex;
      flex-direction: column;
      justify-content: space-around;
      align-items: center;
      width: 25%;
      padding: 10px;

      >image{
        width: 24px;
        height: 24px;
        margin-bottom: 5px;
      }
      >text{
        font-size: 14px;
      }
    }
  }

  >.members{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    width: 90%;
    margin: 5px 5%;
    padding: 20px;
    background-color: white;
    border-radius: 10px;

    >.module-title{
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      margin-bottom: 10px;

      >text{
        font-size: 14px;
        color: gray;
      }
      >text.assist{
        font-size: 12px;
        color: gray;
        font-weight: normal;
      }
    }

    >view{
      display: flex;
      flex-direction: row;
      justify-content: flex-start;
      align-items: flex-start;
      flex-wrap: wrap;
      width: 100%;

      >image{
        display: inline-block;
        width: 20%;
        max-height: 70px;
        margin-left: 4%;
        margin-bottom: 5px;
        border-radius: 50%;
      }
    }
  }

  >.check-form{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    width: 90%;
    margin: 5px 5%;
    padding: 20px;
    background-color: white;
    border-radius: 10px;

    >.module-title{
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      margin-bottom: 10px;

      >text{
        font-size: 14px;
        color: gray;
      }
      >text.assist{
        font-size: 12px;
        color: gray;
        font-weight: normal;
      }
    }

    >.form-info{
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      width: 100%;
      font-size: 14px;

      >view{
        width: 100%;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;

        >.form-title{
          font-size: 18px;
          font-weight: bold;
        }

        >.form-status{
          font-size: 14px;
        }
        >.green{
          color: green;
        }
        >.gray{
          color: gray;
        }
      }

      >.form-time{
        color: gray;
        font-size: 12px;
        margin: 5px 0;
      }
    }

    >.member{
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      width: 100%;
      margin-top: 10px;

      >.title{
        font-size: 14px;
        color: black;

        >text.assist{
          color: gray;
          margin-left: 10px;
        }
      }

      >.status{
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: flex-start;
        width: 100%;
        margin-bottom: 10px;

        >view{
          display: flex;
          flex-direction: row;
          justify-content: flex-start;
          align-items: center;
          width: 100%;
          margin: 5px 0;
          font-size: 14px;

          >.count{
            margin-right: 10px;
            color: #a5a5a5;
          }
          >image.avatar{
            width: 30px;
            height: 30px;
            border-radius: 50%;
            margin-right: 10px;
          }
          >.name{
            font-size: 14px;
          }
        }
      }
    }
  }
  
  >.btns{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 90%;
    margin: 5px 5%;
    background-color: white;
    border-radius: 10px;

    >text{
      line-height: 30px;
      padding: 10px 10px;
      background-color: white;
      font-size: 14px;
      font-weight: bold;
      text-align: center;
    }
    >.disable{
      color: #8A8A8A;
    }
  }

  .modal-container{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: rgba(0, 0, 0, 0.7);
    z-index: 100;

    >.modal-main{
      background-color: #fff;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      padding: 0 10px;
      width: 60%;
      padding-bottom: 0;

      >.modal-title{
        border-bottom: 1px solid light#8A8A8A;
        margin: 10px 0;
        font-size: 12px;
        color: #8A8A8A;
      }
      >button{
        padding: 5px 10px;
        margin: 20px 0;
        align-self: center;
        border: 1px solid #8a8a8a;
        background-color: white;
        font-size: 14px;
        color: black;
        font-weight: bold;
      }
      >button::after{
        border: none;
      }
    }
  }
}

.blank{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100px;

  >text{
    font-size: 14px;
    font-weight: bold;
    color: #8A8A8A;
    border: 1px dashed #8A8A8A;
    padding: 5px 5px;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    line-height: 20px;
    text-align: center;
  }
}

</style>
<template>
  <view class="container">
    <!-- 群组 信息 -->
    <view class="groupInfo">
      <text class="title">{{ groupInfo.name }}</text>
      <view>
        <text>ID：{{ groupInfo.code }}</text>
        <text class="description">{{ groupInfo.description }}</text>
      </view>
    </view>

    <!-- 模块入口 -->
    <view class="modules-container">
      <view bindtap="goto('/pages/groupCheckForms?group_id={{groupId}}')">
        <image src="../static/icons/position.png"></image>
        <text>签到</text>
      </view>
      <!-- <view bindtap="goto('/pages/groupNotes?group_id={{groupId}}')">
        <image src="../static/icons/ideas.png"></image>
        <text>话题</text>
      </view>
      <view>
        <image src="../static/icons/files.png"></image>
        <text>文件</text>
      </view> -->
      <view>
        <image src="../static/icons/files.png"></image>
        <text>互动</text>
      </view>
      <view>
        <image src="../static/icons/files.png"></image>
        <text>通知</text>
      </view>
      <view bindtap="goto('/pages/groupUsers?group_id={{groupId}}')">
        <image src="../static/icons/users.png"></image>
        <text>成员</text>
      </view>
    </view>

    <!-- 成员 信息 -->
    <view class="members" wx:if="{{ groupInfo.userLevel == 1 }}">
      <view class="module-title">
        <text>群组成员</text>
        <text class="assist iconfont">{{ members.length==0?'空空无人':'共' + members.length + '人'}} &#xeb99;</text>
      </view>
      <view wx:if="{{ members.length != 0 }}" wx:key="user_id">
        <image mode="widthFix" wx:for="{{ members }}" wx:key="{{ members }}" src="{{ item.wxInfo.avatarUrl }}"></image>
      </view>
    </view>

    <!-- 签到表 信息 -->
    <view class="check-form" bindtap="goto('/pages/checkFormInfo?group_id={{groupId}}&checkForm_id={{checkForm._id}}')">
      <view class="module-title">
        <text>最近签到</text>
        <text class="assist iconfont">&#xeb99;</text>
      </view>
      <view class="blank" wx:if="{{ !checkForm }}">
        <text>空</text>
      </view>
      <block wx:else>
        <view class="form-info">
          <view>
            <text class="form-title">{{ checkForm.title }}</text>
            <text class="form-status {{checkForm.status == 1?'green':'gray'}}">{{ checkForm.statusWords }}</text>
          </view>
          <text class="form-time">{{ checkForm.duration }}</text>
        </view>
        <view class="member">
          <!-- 成功签到 -->
          <view class="title">
            <text>签到成功</text>
            <text class="assist">{{ checkForm.success.length }}</text>
          </view>
          <view class="status">
            <view wx:for="{{ checkForm.success }}" wx:key="user_id">
              <text class="count">{{ index+1 }}.</text>
              <image class="avatar" src="{{ item.wxInfo.avatarUrl }}"></image>
              <text>{{ item.nickname || item.name }}</text>
            </view>
          </view>

          <!-- 签到失败。不在有效范围 -->
          <view wx:if="{{ checkForm.fail.length!=0 }}" class="title">
            <text>签到失败，不在有效范围内</text>
            <text class="assist">{{ checkForm.fail.length }}</text>
          </view>
          <view class="status">
            <view wx:if="{{ checkForm.fail.length!=0 }}" wx:for="{{ checkForm.fail }}" wx:key="user_id">
              <image class="avatar" src="{{ item.wxInfo.avatarUrl }}"></image>
              <text>{{ item.nickname || item.name }}</text>
            </view>
          </view>
          <!-- 未签到 -->
          <view class="title">
            <text>未签到</text>
            <text class="assist">{{ checkForm.none.length }}</text>
          </view>
          <view class="status">
            <view wx:for="{{ checkForm.none }}" wx:key="user_id">
              <image class="avatar" src="{{ item.wxInfo.avatarUrl }}"></image>
              <text>{{ item.nickname || item.name }}</text>
            </view>
          </view>
        </view>
      </block>
    </view>

    <view class="btns">
      <!-- 普通用户 功能 -->
      <text wx:if="{{ !groupInfo.userLevel && groupInfo.userLevel!=0 && groupInfo.status == 0 }}" bindtap="joinGroup">立即加入</text>
      <text class="disable" disabled="{{ true }}" wx:if="{{ !groupInfo.userLevel && groupInfo.userLevel!=0 && groupInfo.status == 1 }}">加入已关闭，无法加入</text>
      <!-- <button wx:if="{{ groupInfo.userLevel == 0}}" bindtap="toogleExitModal">退出</button> -->
      <!-- 拥有者 功能 -->
      <text wx:if="{{ groupInfo.userLevel == 1 && !canCheck && canCreateCheck }}" bindtap="goto('/pages/createCheckForm?group_id={{groupId}}')">开启签到</text>
      <text wx:if="{{ groupInfo.userLevel == 1 }}" bindtap="goto('/pages/editGroupInfo?group_id={{groupId}}')">修改信息</text>
    </view>

  </view>
</template>

<script>
  import wepy from 'wepy'
  import request from '@/utils/request.js'
  import util from '@/utils/util.js'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '群组信息',
      enablePullDownRefresh: true
    }

    data = {
      groupId: '',
      groupInfo: {},
      userInfo: {
        userId: ''
      },
      members: [],
      checkForms: [],
      checkForm: undefined,
      canCheck: false,
      canCreateCheck: false,
      showExitView: false
    }

    computed = {
    }

    watch = {
      checkForms (newValue, oldValue) {
        let self = this

        if(newValue.length > 0){
          request.post('/getCheckFormById', {checkFormId: newValue[0]._id})
          .then(res=>{
            res.data.checkForm.success = []
            res.data.checkForm.fail = []
            res.data.checkForm.none = []

            for(let item of res.data.checkForm.members){
              if(item.checkStatus == 0){
                res.data.checkForm.none.push(item)
              }
              else if(item.checkStatus == 1){
                res.data.checkForm.success.push(item)
              }
              else if(item.checkStatus == -1){
                res.data.checkForm.fail.push(item)
              }
            }

            // 判断能否签到
            if(util.moment().isSameOrBefore(res.data.checkForm.end_at)){
              res.data.checkForm.statusWords = '进行中'
              res.data.checkForm.status = 1
              self.canCheck = true
              self.canCreateCheck = false
            }
            else{
              res.data.checkForm.statusWords = '已结束'
              res.data.checkForm.status = -1
              self.canCheck = false
              self.canCreateCheck = true
            }

            // 判断是否已经签到
            for(let item of res.data.checkForm.success){
              if(self.userInfo.userId == item._id){
                self.canCheck = false
                break
              }
            }

            res.data.checkForm.duration = util.moment(res.data.checkForm.end_at).fromNow()

            self.checkForm = res.data.checkForm
            self.$apply()            
          })
        }
      }
    }

    methods = {
      inputChange(e){
        let self = this
        const keyArr = e.currentTarget.dataset.key.split('.')

        if(keyArr.length == 2){
          this[keyArr[0]][keyArr[1]] = e.detail.value
        }
        else if(keyArr.length == 3){
          this[keyArr[0]][keyArr[1]][keyArr[2]] = e.detail.value
        }
      },
      joinGroup(){
        let self = this

        // 判断是否登录
        if(self.userInfo.userId == ''){
          wx.showToast({
            title: '请先登录',
            icon: 'none',
            duration: 1000,
            mask: true
          })
          return 
        }

        // 判断是否可以加入
        if(self.groupInfo.status == -1){
          wx.showToast({
            title: '无法加入',
            icon: 'none',
            duration: 2000,
            mask: true
          })
          return
        }

        // 请求参数
        let data = {
          groupId: self.groupId,
          userId: self.userInfo.userId,
        }

        request.post('/joinGroup', data)
        .then(res=>{
          wx.showToast({
            title: '加入成功！',
            icon: 'success',
            duration: 1500,
            mask: true
          })
          self.onShow()
        })
      },
      exitGroup(){
        let self = this

        // 请求参数
        let data = {
          groupId: self.groupId,
          userId: self.userInfo.userId,
        }

        request.post('/exitGroup', data)
        .then(res=>{
          wx.showToast({
            title: '退出成功！',
            icon: 'success',
            duration: 1000
          })
          setTimeout(() => {
            wx.switchTab({url: '/pages/index'})
          }, 1000);
        })
      },
      toogleExitModal(){
        this.showExitView = !this.showExitView
      },
      goto(url){
        wx.navigateTo({url})
      },
    }

    // 下拉刷新
    onPullDownRefresh() {
      this.onShow()
      wx.stopPullDownRefresh()
    }

    onLoad(option) {
      let self = this, userId = wx.getStorageSync('userId'), groupId = option.group_id

      if(userId){
        self.userInfo.userId = userId
      }
      else{
      }

      self.groupId = groupId
    }

    onShow(){
      let self = this

      // 获取群组信息
      request.post('/getGroupInfoById', {groupId: self.groupId, userId: self.userInfo.userId})
      .then(res=>{
        self.groupInfo = res.data
        self.$apply()
      })

      if(self.userInfo.userId){
        // 获取签到表信息
        request.post('/getCheckFormsByGroupId', {groupId: self.groupId, userId: self.userInfo.userId})
        .then(res=>{
          self.checkForms = res.data

          // 无签到数据时
          if(res.data.length == 0){
            self.canCheck = false
            self.canCreateCheck = true
          }
          self.$apply()
        })

        // 获取群员
        request.post('/getUsersByGroupId', {groupId: self.groupId})
        .then(res=>{
          self.members = res.data
          self.$apply()
        })
      }
    }

    onShareAppMessage() {
      return {
        title: `快来加入「${this.groupInfo.name}」~`
      }
    }
  }
</script>
