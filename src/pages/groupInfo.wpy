<style lang="less">
page{
}
.container{
  padding-top: 0;
  padding-bottom: 20px;
  
  >.groupInfo{
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: flex-start;
    width: 100%;
    height: 200px;
    padding: 10px 0;

    >.title{
      padding: 0 20px;
      padding-bottom: 10px;
      font-size: 16px;
      font-weight: bold;
      color: black;
    }
    >view{
      width: 100%;
      padding: 0 20px;
      padding-bottom: 20px;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      font-size: 14px;
      color: #8A8A8A;

      >.description{
        width: 100%;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 4;
        overflow: hidden;
      }
    }
  }

  >.members{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    width: 92%;
    margin: 5px 4%;
    padding: 10px 10px;
    background-color: white;
    border-radius: 10px;

    >view.title{
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      margin-bottom: 10px;

      >text{
        font-size: 14px;
        color: #8A8A8A;
      }
      >text.assist{
        font-size: 12px;
        color: #8A8A8A;
        font-weight: normal;
      }
    }

    >view{
      display: flex;
      flex-direction: row;
      justify-content: flex-start;
      align-items: flex-start;
      flex-wrap: wrap;
      width: 100%;

      >image{
        display: inline-block;
        width: 20%;
        max-height: 70px;
        margin-left: 4%;
        margin-bottom: 5px;
        border-radius: 50%;
      }
    }
  }

  >.check-form{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    width: 92%;
    margin: 5px 4%;
    padding: 10px 10px;
    background-color: white;
    border-radius: 10px;

    >view.title{
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      margin-bottom: 10px;

      >text{
        font-size: 14px;
        color: #8A8A8A;
      }
      >text.assist{
        font-size: 12px;
        color: #8A8A8A;
        font-weight: normal;
      }
    }

    >view.info{
      display: flex;
      flex-direction: row;
      justify-content: flex-start;
      align-items: flex-start;
      flex-wrap: wrap;
      width: 100%;
      font-size: 14px;

      >view{
        width: 100%;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;

        >text.title{
          font-weight: bold;
        }
      }
    }

    >view.member{
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      width: 100%;
      margin: 10px 0;

      >view.title{
        font-size: 14px;
        color: #8A8A8A;

        >text.assist{
          background-color: light#8A8A8A;
          color: black;
          padding: 5px 10px;
          border-radius: 10px;
          line-height: 20px;
          text-align: center;
          margin-left: 10px;
        }
      }

      >view.status{
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: flex-start;
        width: 100%;
        margin-bottom: 10px;

        >view{
          display: flex;
          flex-direction: row;
          justify-content: space-between;
          align-items: center;
          width: 100%;
          margin: 5px 0;
          font-size: 14px;
        }
      }
    }
  }

  >.check-history{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    width: 92%;
    margin: 5px 4%;
    padding: 10px 10px;
    background-color: white;
    border-radius: 10px;

    >view.title{
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      margin-bottom: 10px;

      >text{
        font-size: 14px;
        color: #8A8A8A;
      }
      >text.assist{
        font-size: 12px;
        color: #8A8A8A;
        font-weight: normal;
      }
    }

    >view.history{
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      width: 100%;
      margin: 10px 0;

      >view.title{
        font-size: 14px;
        color: black;
        font-weight: bold;

        >text.assist{
          background-color: light#8A8A8A;
          color: black;
          padding: 5px 10px;
          border-radius: 10px;
          line-height: 20px;
          text-align: center;
          margin-left: 10px;
        }
      }

      >view.status{
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        width: 100%;
        margin-bottom: 10px;
        font-size: 14px;
      }
    }
  }
  
  >.btns{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 92%;
    margin: 5px 4%;
    padding-bottom: 20px;
    padding: 5px 0;
    background-color: white;
    border-radius: 10px;

    >button{
      padding: 5px 0%;
      background-color: white;
      font-size: 14px;
      font-weight: bold;
    }
    >button::after{
      border: none;
    }
    >.disable{
      color: #8A8A8A;
    }
  }
  .modal-container{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: rgba(0, 0, 0, 0.7);

    >.modal-main{
      background-color: #fff;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      padding: 0 10px;
      width: 60%;
      padding-bottom: 0;

      >.modal-title{
        border-bottom: 1px solid light#8A8A8A;
        margin: 10px 0;
        font-size: 12px;
        color: #8A8A8A;
      }
      >button{
        padding: 5px 10px;
        margin: 20px 0;
        align-self: center;
        border: 1px solid #8a8a8a;
        background-color: white;
        font-size: 14px;
        color: black;
        font-weight: bold;
      }
      >button::after{
        border: none;
      }
    }
  }
}

.blank{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100px;

  >text{
    font-size: 14px;
    font-weight: bold;
    color: #8A8A8A;
    border: 1px dashed #8A8A8A;
    padding: 5px 5px;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    line-height: 20px;
    text-align: center;
  }
}

</style>
<template>
  <view class="container">
    <!-- 群组 信息 -->
    <view class="groupInfo">
      <text class="title">{{ groupInfo.name }}</text>
      <view>
        <text>ID：{{ groupInfo.code }}</text>
        <text class="description">{{ groupInfo.description }}</text>
      </view>
    </view>

    <!-- 成员 信息 -->
    <view class="members" wx:if="{{ groupInfo.userLevel == 1 }}">
      <view class="title">
        <text>成员</text>
        <text class="assist">{{ members.length==0?'空空无人':'共' + members.length + '人'}}</text>
      </view>
      <view wx:if="{{ members.length != 0 }}" wx:key="user_id">
        <image mode="widthFix" wx:for="{{ members }}" wx:key="{{ members }}" src="{{ item.wxInfo.avatarUrl }}"></image>
      </view>
    </view>

    <!-- 签到表 信息 -->
    <view class="check-form" data-url="{{ '/pages/checkFormInfo?group_id='+groupId+'&checkForm_id='+checkForm._id}}" bindtap="gotoCheckFormInfoPage">
      <view class="title">
        <text>最近签到记录</text>
      </view>
      <view class="blank" wx:if="{{ !checkForm }}">
        <text>空</text>
      </view>
      <view class="info" wx:if="{{ !!checkForm }}">
        <view>
          <text class="title">{{ checkForm.title }}</text>
          <text class="status">{{ checkForm.statusWords }}</text>
        </view>
        <text>{{ checkForm.createAt }} - {{ checkForm.endTime }}</text>
      </view>
      <view class="member" wx:if="{{ !!checkForm }}">
        <!-- 成功签到 -->
        <view class="title">
          <text>签到成功</text>
          <text class="assist">{{ checkForm.success.length }}</text>
        </view>
        <view class="status">
          <view wx:for="{{ checkForm.success }}" wx:key="user_id">
            <text>{{ item.name }}</text>
            <text>{{ '签到成功' }}</text>
          </view>
        </view>

        <!-- 签到失败。不在有效范围 -->
        <view wx:if="{{ checkForm.fail.length!=0 }}" class="title">
          <text>签到失败，不在有效范围内</text>
          <text class="assist">{{ checkForm.fail.length }}</text>
        </view>
        <view class="status">
          <view wx:if="{{ checkForm.fail.length!=0 }}" wx:for="{{ checkForm.fail }}" wx:key="user_id">
            <text>{{ item.name }}</text>
            <text>{{ '距离太远' }}</text>
          </view>
        </view>
        <!-- 未签到 -->
        <view class="title">
          <text>未签到</text>
          <text class="assist">{{ checkForm.none.length }}</text>
        </view>
        <view class="status">
          <view wx:for="{{ checkForm.none }}" wx:key="user_id">
            <text>{{ item.name }}</text>
            <text>{{ '未签到' }}</text>
          </view>
        </view>
      </view>
    </view>

    <!-- 签到表 信息 -->
    <view class="check-history">
      <view class="title">
        <text>历史签到</text>
      </view>
      <view class="blank" wx:if="{{checkForms.length == 0}}">
        <text>空</text>
      </view>
      <view class="history" wx:for="{{checkForms}}" data-url="{{ '/pages/checkFormInfo?group_id=' + groupId + '&checkForm_id='+item._id }}" bindtap="gotoCheckFormInfoPage">
        <view class="title">
          <text>{{ item.title }}</text>
        </view>
        <view class="status">
          <text>{{ item.createAt }}</text>
          <text wx:if="{{ groupInfo.userLevel == 1 }}">{{ item.successCount + '/' + members.length }}</text>
          <text wx:else>{{item.checkStatus == 1?'签到成功':item.checkStatus == -1?'签到失败，不在规定范围':'未签到'}}</text>
        </view>
      </view>
    </view>

    <!--  -->

    <view class="btns">
      <!-- 普通用户 功能 -->
      <button hover-class="none" wx:if="{{ !groupInfo.userLevel && groupInfo.userLevel!=0 && groupInfo.status != -1 }}" bindtap="joinGroup">申请加群</button>
      <text class="disable" disabled="{{ true }}" hover-class="none" wx:if="{{ !groupInfo.userLevel && groupInfo.userLevel!=0 && groupInfo.status == -1 }}">加入已关闭，无法加入</text>
      <button hover-class="none" wx:if="{{ canCheck }}" bindtap="createCheck">立即签到</button>
      <button hover-class="none" wx:if="{{ groupInfo.userLevel == 0}}" bindtap="toogleExitModal">退出</button>
      <!-- 拥有者 功能 -->
      <button hover-class="none" wx:if="{{ groupInfo.userLevel == 1 && !canCheck && canCreateCheck }}" bindtap="gotoCreateCheck">开启签到</button>
      <button hover-class="none" wx:if="{{ groupInfo.userLevel == 1 }}" bindtap="gotoEditGroupInfo">修改信息</button>
    </view>

    <!-- 退出群组弹出框 -->
    <view wx:if="{{ showExitView }}" bindtap="toogleExitModal" class="modal-container">
      <view class="modal-main" catchtap>
        <text class="modal-title">退出群组</text>
        <button bindtap="exitGroup">确定退出！</button>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import request from '@/utils/request.js'
  import util from '@/utils/util.js'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '群组信息',
      enablePullDownRefresh: true
    }

    data = {
      groupId: '',
      groupInfo: {
      },
      userInfo: {
        userId: ''
      },
      members: [],
      checkForms: [],
      checkForm: undefined,
      canCheck: false,
      canCreateCheck: true,
      showExitView: false
    }

    computed = {
    }

    watch = {
      checkForms (newValue, oldValue) {
        let self = this

        if(newValue.length > 0){
          request.post('/getCheckFormById', {checkFormId: newValue[0]._id})
          .then(res=>{
            res.data.checkForm.success = []
            res.data.checkForm.fail = []
            res.data.checkForm.none = []

            for(let item of res.data.checkForm.members){
              if(item.checkStatus == 0){
                res.data.checkForm.none.push(item)
              }
              else if(item.checkStatus == 1){
                res.data.checkForm.success.push(item)
              }
              else if(item.checkStatus == -1){
                res.data.checkForm.fail.push(item)
              }
            }

            // 判断能否签到
            if(util.isAfter(res.data.checkForm.end_at)){
              res.data.checkForm.statusWords = '进行中'
              self.canCheck = true
              self.canCreateCheck = false
            }
            else{
              res.data.checkForm.statusWords = '已结束'
              self.canCheck = false
            }

            // 判断是否已经签到
            for(let item of res.data.checkForm.success){
              if(self.userInfo.userId == item._id){
                self.canCheck = false
                break
              }
            }

            self.checkForm = res.data.checkForm
            self.$apply()            
          })
        }
      }
    }

    methods = {
      gotoCheckFormInfoPage(e){
        wx.navigateTo({url: e.currentTarget.dataset.url})
      },
      inputChange(e){
        let self = this
        const keyArr = e.currentTarget.dataset.key.split('.')

        if(keyArr.length == 2){
          this[keyArr[0]][keyArr[1]] = e.detail.value
        }
        else if(keyArr.length == 3){
          this[keyArr[0]][keyArr[1]][keyArr[2]] = e.detail.value
        }
      },
      joinGroup(){
        let self = this

        // 判断是否登录
        if(self.userInfo.userId == ''){
          wx.showToast({
            title: '请先登录',
            icon: 'none',
            duration: 1000,
            mask: true
          })
          return 
        }

        // 判断是否可以加入
        if(self.groupInfo.status == -1){
          wx.showToast({
            title: '无法加入',
            icon: 'none',
            duration: 2000,
            mask: true
          })
          return
        }

        // 请求参数
        let data = {
          groupId: self.groupId,
          userId: self.userInfo.userId,
        }

        request.post('/joinGroup', data)
        .then(res=>{
          wx.showToast({
            title: '加入成功！',
            icon: 'success',
            duration: 1500,
            mask: true
          })
          self.onShow()
        })
      },
      exitGroup(){
        let self = this

        // 请求参数
        let data = {
          groupId: self.groupId,
          userId: self.userInfo.userId,
        }

        request.post('/exitGroup', data)
        .then(res=>{
          wx.showToast({
            title: '退出成功！',
            icon: 'success',
            duration: 1000
          })
          setTimeout(() => {
            wx.switchTab({url: '/pages/index'})
          }, 1000);
        })
      },
      toogleExitModal(){
        this.showExitView = !this.showExitView
      },
      gotoCreateCheck(){
        wx.navigateTo({url: '/pages/createCheckForm?group_id='+this.groupId})
      },
      gotoEditGroupInfo(){
        wx.navigateTo({url: '/pages/editGroupInfo?group_id='+this.groupId})
      },
      createCheck(){
        let self = this
        
        let ownerPosition = self.checkForm.position.split('-')

        // 获取经纬度坐标
        wx.getLocation({
          type: 'wgs84',
          success (res) {
            let now = new Date()
            /**
             * @form_id
             * @user_id
             * @position
             * @check_at
             * @status: Number,     1 to success, -1 to fail because of the position
             */
            
            let data = {
              checkFormId: self.checkForm._id,
              userId: self.userInfo.userId,
              checkAt: Date.now(),
              position: res.latitude + '-' + res.longitude
            }

            if(self.checkForm.distance == -1){
              data.status = 1
            }
            else{
              let distance = getGreatCircleDistance(res.latitude, res.longitude, ownerPosition[0], ownerPosition[1])
              data.status = distance <= self.checkForm.distance?1:-1
            }

            request.post('/createCheck', data)
            .then(res=>{              
              wx.showToast({
                title: '签到成功！',
                icon: 'success',
                duration: 1500,
                mask: true
              })
              self.onShow()
              self.canCheck = false

            })
            
            // 通过经纬度获取距离（单位：米）
            function getGreatCircleDistance(lat1,lng1,lat2,lng2){
              var EARTH_RADIUS = 6378137.0;

              var radLat1 = lat1*Math.PI/180.0;
              var radLat2 = lat2*Math.PI/180.0;
              
              var a = radLat1 - radLat2;
              var b = lng1*Math.PI/180.0 - lng2*Math.PI/180.0;
              
              var s = 2*Math.asin(Math.sqrt(Math.pow(Math.sin(a/2),2) + Math.cos(radLat1)*Math.cos(radLat2)*Math.pow(Math.sin(b/2),2)));
              s = s*EARTH_RADIUS;
              s = Math.round(s*10000)/10000.0;
                      
              return s;
            }
          },
          fail (res){
            wx.showToast({
              title: '获取地址失败，请前往小程序设置页面开启权限！',
              icon: 'none',
              duration: 2000
            })
          }
        })
      }
    }

    // 下拉刷新
    onPullDownRefresh() {
      this.onShow()
      wx.stopPullDownRefresh()
    }


    onLoad(option) {
      let self = this, userId = wx.getStorageSync('userId'), groupId = option.group_id

      if(userId){
        self.userInfo.userId = userId
      }
      else{
      }

      self.groupId = groupId
    }

    onShow(){
      let self = this

      // 获取群组信息
      request.post('/getGroupInfoById', {groupId: self.groupId, userId: self.userInfo.userId})
      .then(res=>{
        self.groupInfo = res.data
        self.$apply()
      })

      if(self.userInfo.userId){
        // 获取签到表信息
        request.post('/getCheckFormsByGroupId', {groupId: self.groupId, userId: self.userInfo.userId})
        .then(res=>{
          self.checkForms = res.data
          self.$apply()
        })

        // 获取群员
        request.post('/getUsersByGroupId', {groupId: self.groupId})
        .then(res=>{
          self.members = res.data
          self.$apply()
        })
      }
    }

    onShareAppMessage() {
      return {
        title: `快来加入「${this.groupInfo.name}」~`
      }
    }
  }
</script>
