<style lang="less">
page{
  background-color: white;
}

.container{
  >.groupInfo{
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: flex-start;
    width: 100%;
    height: 150px;
    margin: 10px 0;
    background-color: #efefef;

    >.title{
      padding: 0 20px;
      padding-bottom: 10px;
      font-size: 16px;
      font-weight: bold;      
      color: black;
    }
    >view{
      width: 100%;
      padding: 0 20px;
      padding-bottom: 10px;
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      font-size: 14px;
      color: gray;
    }
  }

  >.members{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    width: 100%;
    padding: 5px 20px;

    >view.title{
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      width: 100%;

      >text{
        font-size: 14px;
        color: black;
        font-weight: bold;
      }
      >text.assist{
        font-size: 12px;
        color: gray;
        font-weight: normal;
      }
    }

    >view{
      display: flex;
      flex-direction: row;
      justify-content: flex-start;
      align-items: flex-start;
      flex-wrap: wrap;
      width: 100%;

      >image{
        width: 60px;
        height: 60px;
        margin-right: 10px;
        border-radius: 50%;
      }
    }
  }
  
  >button{
    padding: 10px 7%;
    width: 86%;
    margin-top: 20px;
    margin-bottom: 20px;
    background-color: white;
    border-top: 1px solid #fafafa;
    border-bottom: 1px solid #fafafa;
  }
  >button::after{
    border: none;
  }
}
</style>
<template>
  <view class="container">

    <!-- 群组 信息 -->
    <view class="groupInfo">
      <text class="title">{{ groupInfo.name }}</text>
      <view>
        <text>{{ groupInfo.groupCode }}</text>
      </view>
    </view>

    <!-- 成员 信息 -->
    <view class="members">
      <view class="title">
        <text>成员</text>
        <text class="assist">{{ groupInfo.members.length==0?'空空无人':'共' + groupInfo.members.length + '人'}}</text>
      </view>
      <view wx:if="{{ groupInfo.members.length!=0 }}">
        <image mode="aspectFit" wx:for="{{ groupInfo.members }}" src="{{ item.user_info.avatarUrl }}"></image>
      </view>
    </view>

    <!-- 签到表 信息 -->

    <!-- 普通用户 功能 -->
    <button wx:if="{{ !isJoined }}" bindtap="joinGroup">申请加群</button>
    <button wx:if="{{ userInfo._id != groupInfo.owner && canCheck }}" bindtap="getChecked">签到</button>
    <button wx:if="{{ userInfo._id != groupInfo.owner}}">退出</button>

    <!-- 拥有者 功能 -->
    <button wx:if="{{ userInfo._id == groupInfo.owner }}" bindtap="gotoCreateCheck">开启签到</button>
    <button wx:if="{{ userInfo._id == groupInfo.owner }}" bindtap="gotoEditGroupInfo">修改信息</button>
    <button wx:if="{{ userInfo._id == groupInfo.owner }}" bindtap="">解散</button>

  </view>
</template>

<script>
  import wepy from 'wepy'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '群组信息'
    }

    data = {
      groupInfo: {
        checkForm: [],
        members: []
      },
      userInfo: {},
      check: {

      },
      wxInfo: {},
      _id: '',
      isJoined: true,
      canCheck: false
    }

    computed = {
      now () {
        return +new Date()
      }
    }

    watch = {
      groupInfo (newValue, oldValue) {
        let self = this

        // 判断能否加入
        if(self.userInfo._id == newValue.owner){
          self.isJoined = true
        }
        else{
          if(newValue.members.length == 0){
            self.isJoined = false
          }
          for(let item of newValue.members){
            if(item.user_id == self.userInfo._id){
              self.isJoined = true
              break
            }
            else{
              self.isJoined = false
            }
          }
        }

        // 判断能否签到
        if(newValue.checkForm && newValue.checkForm.length == 0){
          self.canCheck = false
        }
        else{
          const db = wx.cloud.database()

          db.collection('checks').doc(newValue.checkForm[newValue.checkForm.length-1])
          .get({
            success: function(res) {
              // 最近的签到信息
              self.check = res.data

              res.data.endTime >= new Date()? self.canCheck=true : self.canCheck=false

              console.log(newValue.members)
              console.log(res.data.members)
              for(let member of newValue.members){
                member.status = 0  // 未签到
                for(let checkedUser of res.data.members){
                  if(checkedUser.user_id == member.user_id){
                    member.status = checkedUser.status
                    break
                  }
                }
              }

              console.log(newValue)
              self.groupInfo = newValue
              self.$apply()
            }
          })
        }
      }
    }

    methods = {
      inputChange(e){
        let self = this
        const keyArr = e.currentTarget.dataset.key.split('.')

        if(keyArr.length == 2){
          this[keyArr[0]][keyArr[1]] = e.detail.value
        }
        else if(keyArr.length == 3){
          this[keyArr[0]][keyArr[1]][keyArr[2]] = e.detail.value
        }
      },
      joinGroup(){
        let self = this
        
        // 判断是否可以加入
        if(self.groupInfo.status == -1){
          console.log('无法加入')
          return
        }

        // 请求参数
        let data = {
          group_id: self._id,
          user_id: self.userInfo._id,
          user_info: {
            avatarUrl: self.wxInfo.avatarUrl,
            name: self.userInfo.name,
            gender: self.userInfo.gender,
          }
        }

        // 调用云函数
        wx.cloud.callFunction({
          name: 'joinGroup',
          data: data
        }).then(res=>{
          delete data.group_id

          self.groupInfo.members.push(data)
          self.isJoined = true

          self.$apply()
          
          wx.showToast({
            title: '加入成功',
            icon: 'success',
            duration: 2000,
            mask: true
          })
        })
      },
      gotoCreateCheck(){
        wx.navigateTo({url: '../pages/createCheck?_id='+this._id})
      },
      gotoEditGroupInfo(){
        wx.navigateTo({url: '../pages/editGroupInfo?_id='+this._id})
      },
      getChecked(){
        let self = this
        
        const db = wx.cloud.database(), _ = db.command

        let ownerPosition = self.check.position.split('-')
        // 获取经纬度坐标
        wx.getLocation({
          type: 'wgs84',
          success (res) {
            let now = new Date()
            /*
              time: Date,
              user_id: ,
              position: String,
              status: Number,     1 to success, -1 to fail because of the position
            */
            
            let data = {
              time: Date.now(),
              user_id: self.userInfo._id,
              position: res.latitude + '-' + res.longitude
            }

            if(self.check.distance == -1){
              data.status = 1
            }
            else{
              let distance = getGreatCircleDistance(res.latitude, res.longitude, ownerPosition[0], ownerPosition[1])
              data.status = distance <= self.check.distance?1:-1
            }

            // 调用云函数
            wx.cloud.callFunction({
              name: 'getChecked',
              data: {
                check_id: self.check._id,
                check_info: data
              }
            }).then(res=>{
              self.canCheck = false

              self.$apply()
              
              wx.showToast({
                title: '签到成功',
                icon: 'success',
                duration: 2000,
                mask: true
              })
            })
            
            // 通过经纬度获取距离（单位：米）
            function getGreatCircleDistance(lat1,lng1,lat2,lng2){
              var EARTH_RADIUS = 6378137.0;

              var radLat1 = lat1*Math.PI/180.0;
              var radLat2 = lat2*Math.PI/180.0;
              
              var a = radLat1 - radLat2;
              var b = lng1*Math.PI/180.0 - lng2*Math.PI/180.0;
              
              var s = 2*Math.asin(Math.sqrt(Math.pow(Math.sin(a/2),2) + Math.cos(radLat1)*Math.cos(radLat2)*Math.pow(Math.sin(b/2),2)));
              s = s*EARTH_RADIUS;
              s = Math.round(s*10000)/10000.0;
                      
              return s;
            }
          },
          fail (res){
            console.log(res)
          }
        })
      }
    }

    onLoad(option) {
      console.log('groupInfo onload')
      let self = this, wxInfo = wx.getStorageSync('wxInfo'), _id = wx.getStorageSync('_id')

      if(wxInfo){
        self.wxInfo = wxInfo
      }
      if(_id){
        self.userInfo._id = _id
      }
      self._id = option._id
      
      const db = wx.cloud.database()

      wx.cloud.callFunction({
        name: 'getGroupById',
        data: {group_id: option._id}
      }).then(res=>{
        console.log(res)
        self.groupInfo = res.result.data
        self.$apply()
      })

      db.collection('users').doc(_id)
      .get({
        success: function(res) {
          self.userInfo = res.data
          self.$apply()
        }
      })
    }
  }
</script>
