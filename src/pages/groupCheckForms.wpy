<style lang="less">
page{
  background-color: #ededed;
}

.container{
  
  >.check-form{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    width: 100%;
    padding: 10px 5%;
    background-color: #ededed;

    >view.title{
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      margin-bottom: 10px;

      >text{
        font-size: 14px;
        color: #8A8A8A;
      }
      >text.assist{
        font-size: 12px;
        color: #8A8A8A;
        font-weight: normal;
      }
    }

    >view.info{
      display: flex;
      flex-direction: row;
      justify-content: flex-start;
      align-items: flex-start;
      flex-wrap: wrap;
      width: 100%;
      font-size: 14px;

      >view{
        width: 100%;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;

        >text.title{
          font-weight: bold;
        }
      }
    }

    >view.member{
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      width: 100%;
      margin: 10px 0;

      >view.title{
        font-size: 14px;
        color: #8A8A8A;

        >text.assist{
          background-color: light#8A8A8A;
          color: black;
          padding: 5px 10px;
          border-radius: 10px;
          line-height: 20px;
          text-align: center;
          margin-left: 10px;
        }
      }

      >view.status{
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: flex-start;
        width: 100%;
        margin-bottom: 10px;

        >view{
          display: flex;
          flex-direction: row;
          justify-content: flex-start;
          align-items: center;
          width: 100%;
          margin: 5px 0;
          font-size: 14px;

          >.count{
            margin-right: 10px;
            color: #a5a5a5;
          }
          >image.avatar{
            width: 30px;
            height: 30px;
            border-radius: 50%;
            margin-right: 10px;
          }
          >.name{
            font-size: 14px;
          }
        }
      }
    }
  }

  >.check-history{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    width: 100%;
    padding: 10px 5%;
    background-color: #ededed;

    >view.title{
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      margin-bottom: 10px;

      >text{
        font-size: 14px;
        color: gray;
      }
      >text.assist{
        font-size: 12px;
        color: gray;
        font-weight: normal;
      }
    }

    >.history{
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      width: 100%;
      margin: 10px 0;

      >view.title{
        font-size: 14px;
        color: black;

        >text.assist{
          color: black;
          padding: 5px 10px;
          border-radius: 10px;
          line-height: 20px;
          text-align: center;
          margin-left: 10px;
        }
      }

      >.status{
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        width: 100%;
        margin-bottom: 10px;
        font-size: 14px;
      }
    }
    >.history:last-child{
      padding-bottom: 100px;
    }
  }
  
  >.btns{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 300px;
    padding-bottom: 20px;
    background-color: #fafafa;
    border-radius: 10px;

    >input{
      font-size: 16px;
      padding: 4px 4px;
      width: 100px;
      text-align: center;
      line-height: 24px;
      margin-bottom: 10px;
      border: 1px solid lightgray;
    }

    >button{
      padding: 0 10px;
      color: white;
      background-color: green;
      font-size: 14px;
      font-weight: bold;
      margin-bottom: 10px;
    }
    button[disabled] {
      color:rgba(255, 255, 255, 0.6);
      background-color: lightgray;
    }

    >button::after{
      border: none;
    }

    >.a{
      font-size: 16px;
      color: blue;
    }
  }

}

.blank{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100px;

  >text{
    font-size: 14px;
    font-weight: bold;
    color: #8A8A8A;
    border: 1px dashed #8A8A8A;
    padding: 5px 5px;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    line-height: 20px;
    text-align: center;
  }
}

</style>
<template>
  <view class="container">

    <view class="btns">
      <!-- 普通用户 功能 -->
      <block>
        <input type="number" maxlength="5" data-key="checkCode" bindinput="inputChange" placeholder="输入签到码" disabled="{{!canCheck}}" />
        <button hover-class="none" bindtap="createCheck" disabled="{{!canCheck}}">立即签到</button>
      </block>
      <!-- 拥有者 功能 -->
      <text class="a" wx:if="{{ groupInfo.userLevel == 1 && !canCheck }}" bindtap="goto('/pages/createCheckForm?group_id={{groupId}}')">开启签到</text>
    </view>

    <!-- 签到表 信息 -->
    <view class="check-form" wx:if="{{ groupInfo.userLevel == 1 }}" bindtap="goto('/pages/checkFormInfo?group_id={{groupId}}&checkForm_id={{checkForm._id}}')">
      <view class="title">
        <text>最近签到记录</text>
      </view>
      <view class="blank" wx:if="{{ !checkForm }}">
        <text>空</text>
      </view>
      <view class="info" wx:if="{{ !!checkForm }}">
        <view>
          <text class="title">{{ checkForm.title }}</text>
          <text class="status">{{ checkForm.statusWords }}</text>
        </view>
        <text>{{ checkForm.createAt }} - {{ checkForm.endTime }}</text>
      </view>
      <view class="member" wx:if="{{ !!checkForm }}">
        <!-- 成功签到 -->
        <view class="title">
          <text>签到成功</text>
          <text class="assist">{{ checkForm.success.length }}</text>
        </view>
        <view class="status">
          <view wx:for="{{ checkForm.success }}" wx:key="user_id">
            <image class="avatar" src="{{ item.wxInfo.avatarUrl }}"></image>
            <text class="name">{{ item.name }}</text>
          </view>
        </view>

        <!-- 签到失败。不在有效范围 -->
        <view wx:if="{{ checkForm.fail.length!=0 }}" class="title">
          <text>签到失败，不在有效范围内</text>
          <text class="assist">{{ checkForm.fail.length }}</text>
        </view>
        <view class="status">
          <view wx:if="{{ checkForm.fail.length!=0 }}" wx:for="{{ checkForm.fail }}" wx:key="user_id">
            <image class="avatar" src="{{ item.wxInfo.avatarUrl }}"></image>
            <text class="name">{{ item.name }}</text>
          </view>
        </view>
        <!-- 未签到 -->
        <view class="title">
          <text>未签到</text>
          <text class="assist">{{ checkForm.none.length }}</text>
        </view>
        <view class="status">
          <view wx:for="{{ checkForm.none }}" wx:key="user_id">
            <image class="avatar" src="{{ item.wxInfo.avatarUrl }}"></image>
            <text class="name">{{ item.name }}</text>
          </view>
        </view>
      </view>
    </view>

    <!-- 历史签到表 信息 -->
    <view class="check-history">
      <view class="title">
        <text>历史签到</text>
      </view>
      <view class="blank" wx:if="{{checkForms.length == 0}}">
        <text>空</text>
      </view>
      <view class="history" wx:for="{{checkForms}}" bindtap="goto('/pages/checkFormInfo?group_id={{groupId}}&checkForm_id={{item._id}}')">
        <view class="title">
          <text>{{ item.title }}</text>
        </view>
        <view class="status">
          <text>{{ item.createAt }}</text>
          <text wx:if="{{ groupInfo.userLevel == 1 }}">签到成功人数：{{ item.successCount }}</text>
          <text wx:else>{{item.checkStatus == 1?'签到成功':item.checkStatus == -1?'签到失败，不在规定范围':'未签到'}}</text>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import request from '@/utils/request.js'
  import util from '@/utils/util.js'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '签到',
      navigationBarBackgroundColor: '#fafafa',
      enablePullDownRefresh: true
    }

    data = {
      groupId: '',
      groupInfo: {},
      userInfo: {
        userId: ''
      },
      checkCode: '',
      checkForms: [],
      checkForm: undefined,
      canCheck: false,
    }

    computed = {
    }

    watch = {
      checkForms (newValue, oldValue) {
        let self = this

        if(newValue.length > 0){
          request.post('/getCheckFormById', {checkFormId: newValue[0]._id})
          .then(res=>{
            res.data.checkForm.success = []
            res.data.checkForm.fail = []
            res.data.checkForm.none = []

            for(let item of res.data.checkForm.members){
              if(item.checkStatus == 0){
                res.data.checkForm.none.push(item)
              }
              else if(item.checkStatus == 1){
                res.data.checkForm.success.push(item)
              }
              else if(item.checkStatus == -1){
                res.data.checkForm.fail.push(item)
              }
            }

            // 判断能否签到
            if(util.isAfter(res.data.checkForm.end_at)){
              res.data.checkForm.statusWords = '进行中'
              self.canCheck = true
            }
            else{
              res.data.checkForm.statusWords = '已结束'
              self.canCheck = false
            }

            // 判断是否已经签到
            for(let item of res.data.checkForm.success){
              if(self.userInfo.userId == item._id){
                self.canCheck = false
                res.data.checkForm.statusWords = '已签到'
                break
              }
            }

            self.checkForm = res.data.checkForm
            self.$apply()            
          })
        }
      }
    }

    methods = {
      inputChange(e){
        let self = this
        const keyArr = e.currentTarget.dataset.key.split('.')

        if(keyArr.length == 1){
          this[keyArr[0]] = e.detail.value
        }
        else if(keyArr.length == 2){
          this[keyArr[0]][keyArr[1]] = e.detail.value
        }
        else if(keyArr.length == 3){
          this[keyArr[0]][keyArr[1]][keyArr[2]] = e.detail.value
        }
      },
      goto(url){
        wx.navigateTo({url})
      },
      createCheck(){
        let self = this

        if(self.checkCode != self.checkForm.code){
          wx.showToast({
            title: '签到码错误！',
            icon: 'none',
            duration: 1000,
            mask: true
          })
          return 
        }
        
        let ownerPosition = self.checkForm.position.split('-')

        // 获取经纬度坐标
        wx.getLocation({
          type: 'wgs84',
          success (res) {
            console.log(res)
            let now = new Date()
            /**
             * @form_id
             * @user_id
             * @position
             * @check_at
             * @status: Number,     1 to success, -1 to fail because of the position
             */
            
            let data = {
              checkFormId: self.checkForm._id,
              userId: self.userInfo.userId,
              checkAt: Date.now(),
              position: res.latitude + '-' + res.longitude
            }

            if(self.checkForm.distance == -1){
              data.status = 1
            }
            else{
              let distance = getGreatCircleDistance(res.latitude, res.longitude, ownerPosition[0], ownerPosition[1])
              console.log(distance)
              data.status = distance <= self.checkForm.distance?1:-1
            }

            request.post('/createCheck', data)
            .then(res=>{              
              wx.showToast({
                title: '签到成功！',
                icon: 'success',
                duration: 1500,
                mask: true
              })
              self.onShow()
              self.canCheck = false
            })
            
            // 通过经纬度获取距离（单位：米）
            function getGreatCircleDistance(lat1, lng1, lat2, lng2){
              var theta = lng1 - lng2;

              var dist = Math.sin(lat1/ 180 * Math.PI) * Math.sin(lat2/ 180 * Math.PI)
                          + Math.cos(lat1/ 180 * Math.PI) * Math.cos(lat2/ 180 * Math.PI)
                          * Math.cos(theta/ 180 * Math.PI);

              dist = Math.acos(dist);
              dist = dist* 180 / Math.PI;

              var miles = dist * 60 * 1.1515;
              return miles;
            }
          },
          fail (res){
            wx.showToast({
              title: '获取地址失败，请前往小程序设置页面开启权限！',
              icon: 'none',
              duration: 2000
            })
          }
        })
      }
    }

    // 下拉刷新
    onPullDownRefresh() {
      this.onShow()
      wx.stopPullDownRefresh()
    }

    onLoad(option) {
      let self = this, userId = wx.getStorageSync('userId'), groupId = option.group_id

      if(userId){
        self.userInfo.userId = userId
      }
      else{
      }

      self.groupId = groupId
    }

    onShow(){
      let self = this

      // 获取群组信息
      request.post('/getGroupInfoById', {groupId: self.groupId, userId: self.userInfo.userId})
      .then(res=>{
        self.groupInfo = res.data
        self.$apply()
      })

      if(self.userInfo.userId){
        // 获取签到表信息
        request.post('/getCheckFormsByGroupId', {groupId: self.groupId, userId: self.userInfo.userId})
        .then(res=>{
          self.checkForms = res.data
          self.$apply()
        })
      }
    }

    onShareAppMessage() {
      return {
        title: `快来加入「${this.groupInfo.name}」~`
      }
    }
  }
</script>
