<style lang="less">
page{
  background-color: #fafafa;
}

.container{
  >.header{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    padding: 30px 0;

    >image{
      width: 80px;
      height: 80px;
      border-radius: 50%;
      margin-bottom: 10px;
    }
    >text{
      font-weight: bold;
      color: black;
      font-size: 40rpx;
      line-height: 24px;
    }
  }
  >.inputs{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    margin: 10px 7%;
    padding-top: 10px;
    width: 86%;

    >text{
      color: #8a8a8a;
      font-size: 28rpx;
    }

    >.input-container{
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      padding: 20px 0;
      width: 100%;
      border-bottom: 1px solid #fafafa;

      >text{
        flex: 0 1 auto;
        color: black;
        font-size: 32rpx;
        padding-right: 20px;
      }
      >input, >picker{
        flex: 1 0 auto;
        color: black;
        font-size: 32rpx;
        font-weight: bold;
        text-align: right;
      }
    }
  }
  >.message{
    align-self: center;
    font-size: 28rpx;
    color: green;
  }
  >button{
    padding: 10px 7%;
    width: 86%;
    margin-top: 20px;
    margin-bottom: 20px;
    background-color: white;
    border-top: 1px solid #fafafa;
    border-bottom: 1px solid #fafafa;
  }
  >button::after{
    border: none;
  }
}
</style>
<template>
  <view class="container">
    <view class="header">
      <image src="{{ wxInfo.avatarUrl }}"></image>
      <text>{{ userInfo.name }}</text>
    </view>

    <view class="inputs">
      <text>基本信息</text>
      <view class="input-container">
        <text>姓名</text>
        <input placeholder="请输入姓名" maxlength="10" data-key="userInfo.name" value="{{ userInfo.name }}" bindchange="inputChange" />
      </view>
      <view class="input-container">
        <text>性别</text>
        <picker mode="selector" data-key="userInfo.gender" bindchange="inputChange" value="{{ userInfo.gender }}" range="{{ sexArray }}">
          <view class="picker">
            {{ sexArray[userInfo.gender] }}
          </view>
        </picker>
      </view>
    </view>
    <text class="message">{{message}}</text>

    <!-- <view class="inputs">
      <text>学校信息</text>
      <view class="input-container">
        <text>学校名</text>
        <input placeholder="" data-key="userInfo.schoolInfo.name" bindchange="inputChange" value="{{ userInfo.schoolInfo.name }}" />
      </view>
      <view class="input-container">
        <text>{{ userInfo.level==0?'学号':'工号' }}</text>
        <input placeholder="" data-key="userInfo.schoolInfo.id" bindchange="inputChange" value="{{ userInfo.schoolInfo.id }}" />
      </view>
      <view class="input-container">
        <text>学院</text>
        <input placeholder="难道">
      </view>
      <view class="input-container">
        <text>专业</text>
        <input placeholder="难道">
      </view>
      <view class="input-container">
        <text>群组</text>
        <input placeholder="难道">
      </view>
    </view> -->
    
    <!-- <view class="inputs">
      <text>联系信息</text>
      <view class="input-container">
        <text>手机</text>
        <input placeholder="请输入手机号">
      </view>
      <view class="input-container">
        <text>邮箱</text>
        <input placeholder="请输入邮箱">
      </view>
    </view> -->

    <!-- <button bindtap="updateUserInfo">提交修改</button> -->

  </view>
</template>

<script>
  import wepy from 'wepy'
  import request from '@/utils/request.js'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '我的信息',
      navigationBarBackgroundColor: '#fafafa',
      enablePullDownRefresh: false
    }

    data = {
      wxInfo: {
        nickName: '登入',
        avatarUrl: '../static/imgs/user.png'
      },
      sexArray: ['保密', '男', '女'],
      kindArray: ['学生', '教师'],
      userInfo: {
        name: '',
        gender: 0,
        level: 0,
      },
      message: '',
      openid: ''
    }

    computed = {
      
    }

    watch = {
      userInfo (newValue, oldValue) {
        if(!oldValue._id){
          return
        }
        let self = this
        
        request.post('/setUserInfo', {
          userId: self.userInfo._id,
          name: self.userInfo.name,
          gender: self.userInfo.gender,
          email: self.userInfo.email || '',
          wxInfo: self.wxInfo
        })
        .then(res=>{
          self.message = '更新成功！'
          self.$apply()
          setTimeout(() => {
            self.message = ''
            self.$apply()
          }, 2000);
        })
      }
    }

    methods = {
      inputChange(e){
        let self = this
        const keyArr = e.currentTarget.dataset.key.split('.')

        if(keyArr.length == 1){
          this[keyArr[0]] = e.detail.value
        }
        else if(keyArr.length == 2){
          this[keyArr[0]][keyArr[1]] = e.detail.value
        }
        else if(keyArr.length == 3){
          this[keyArr[0]][keyArr[1]][keyArr[2]] = e.detail.value
        }
      },
      updateUserInfo(){
        let self = this
        
        request.post('/setUserInfo', {
          userId: self.userInfo._id,
          name: self.userInfo.name,
          gender: self.userInfo.gender,
          email: self.userInfo.email || '',
          wxInfo: self.wxInfo
        })
        .then(res=>{
          self.userInfo = res.data
          self.$apply()
        })
      }
    }

    onShow() {
      let self = this, wxInfo = wx.getStorageSync('wxInfo'), openid = wx.getStorageSync('openid')

      if(wxInfo){
        self.wxInfo = wxInfo
      }
      if(openid){
        self.openid = openid

        // 获取用户信息
        request.post('/login', {openid})
        .then(res=>{
          self.userInfo = res.data
          self.$apply()
        })
      }
    }
  }
</script>
